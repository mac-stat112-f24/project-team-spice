[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Spice Girls Project",
    "section": "",
    "text": "Preface\nPosh, Ginger, Baby, Sporty, and Scary. What do these five words have in common?\nSPICE!!\nThe Spice Girls formed in 1994 after auditions were held to form a girl group to rival the boy bands dominating the airwaves at the time. By 1996, the group, consisting of Mel B (Scary), Melanie C (Sporty), Emma Bunton (Baby), Geri Halliwell-Horner (Ginger), Victoria Beckham (Posh), had found incredible success with their debut single “Wannabe.” Over the following five years, the Spice Girls emerged as superstars, and are now seen as definitive cultural icons of the 90s. In this data analysis, we will explore aspects of their music and lyrics to hopefully discover the reasons for their smashing success.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "eda-mayumi.html",
    "href": "eda-mayumi.html",
    "title": "1  Data Overview",
    "section": "",
    "text": "1.1 Data Upload\nlyrics &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/lyrics.csv')\n\nRows: 1885 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): artist_name, album_name, song_name, section_name, line, section_artist\ndbl (3): track_number, song_id, line_number\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstudio_album_tracks &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/studio_album_tracks.csv')\n\nRows: 31 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): artist_name, artist_id, album_id, track_id, track_name, album_nam...\ndbl  (15): album_release_year, danceability, energy, key, loudness, mode, sp...\ndate  (1): album_release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Data Overview</span>"
    ]
  },
  {
    "objectID": "eda-mayumi.html#lyrics-data",
    "href": "eda-mayumi.html#lyrics-data",
    "title": "1  Data Overview",
    "section": "1.2 Lyrics Data",
    "text": "1.2 Lyrics Data\n\n1.2.1 Data Set Structure\n\nstr(lyrics)\n\nspc_tbl_ [1,885 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name   : chr [1:1885] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ album_name    : chr [1:1885] \"Spice\" \"Spice\" \"Spice\" \"Spice\" ...\n $ track_number  : num [1:1885] 1 1 1 1 1 1 1 1 1 1 ...\n $ song_id       : num [1:1885] 89740 89740 89740 89740 89740 ...\n $ song_name     : chr [1:1885] \"Wannabe\" \"Wannabe\" \"Wannabe\" \"Wannabe\" ...\n $ line_number   : num [1:1885] 1 2 3 4 5 6 7 8 9 10 ...\n $ section_name  : chr [1:1885] \"Intro\" \"Intro\" \"Intro\" \"Intro\" ...\n $ line          : chr [1:1885] \"Hahaha\" \"Yo, I'll tell you what I want, what I really, really want\" \"So tell me what you want, what you really, really want\" \"I'll tell you what I want, what I really, really want\" ...\n $ section_artist: chr [1:1885] \"Scary, Ginger\" \"Scary, Ginger\" \"Scary, Ginger\" \"Scary, Ginger\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   album_name = col_character(),\n  ..   track_number = col_double(),\n  ..   song_id = col_double(),\n  ..   song_name = col_character(),\n  ..   line_number = col_double(),\n  ..   section_name = col_character(),\n  ..   line = col_character(),\n  ..   section_artist = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n1.2.2 Total number of lines in Spice Girls songs\n\nlyrics |&gt;\n  group_by(song_name) |&gt;\n  summarise(total_lines = max(line_number))\n\n# A tibble: 31 × 2\n   song_name                    total_lines\n   &lt;chr&gt;                              &lt;dbl&gt;\n 1 \"2 Become 1\"                          42\n 2 \"Denying\"                             71\n 3 \"Do It\"                               71\n 4 \"Get Down With Me\"                    53\n 5 \"Goodbye\"                             53\n 6 \"Holler\"                             105\n 7 \"If U Can\\x92t Dance\"                 73\n 8 \"If You Wanna Have Some Fun\"          68\n 9 \"Last Time Lover\"                     72\n10 \"Let Love Lead the Way\"               67\n# ℹ 21 more rows\n\n\n\n\n1.2.3 How many song lines are there in each section category?\n\nsection_count &lt;- lyrics |&gt;\n  count(section_name)\n\nggplot(section_count, aes(x = reorder(section_name, -n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(\n    title = \"Amount of Song Lines per Section\",\n    x = \"Section Name\",\n    y = \"Number of Lines\") +\n  coord_flip()",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Data Overview</span>"
    ]
  },
  {
    "objectID": "eda-mayumi.html#studio-album-tracks-data",
    "href": "eda-mayumi.html#studio-album-tracks-data",
    "title": "1  Data Overview",
    "section": "1.3 Studio Album Tracks Data",
    "text": "1.3 Studio Album Tracks Data\n\n1.3.1 Data Set Structure\n\nstr(studio_album_tracks)\n\nspc_tbl_ [31 × 25] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name       : chr [1:31] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ artist_id         : chr [1:31] \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" ...\n $ album_id          : chr [1:31] \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" ...\n $ album_release_date: Date[1:31], format: \"2000-01-01\" \"2000-01-01\" ...\n $ album_release_year: num [1:31] 2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ danceability      : num [1:31] 0.769 0.829 0.614 0.736 0.86 0.798 0.671 0.571 0.709 0.536 ...\n $ energy            : num [1:31] 0.819 0.764 0.788 0.779 0.71 0.751 0.75 0.481 0.872 0.539 ...\n $ key               : num [1:31] 10 5 11 8 1 5 1 0 7 11 ...\n $ loudness          : num [1:31] -3.94 -3.78 -5.55 -5.16 -4.21 ...\n $ mode              : num [1:31] 0 0 1 1 0 0 1 1 0 1 ...\n $ speechiness       : num [1:31] 0.0431 0.0431 0.027 0.0401 0.0356 0.0486 0.0279 0.0251 0.0443 0.0272 ...\n $ acousticness      : num [1:31] 0.0293 0.0287 0.155 0.0172 0.00259 0.009 0.188 0.177 0.253 0.744 ...\n $ instrumentalness  : num [1:31] 3.70e-03 3.29e-06 0.00 3.30e-03 3.57e-05 0.00 0.00 0.00 1.06e-02 5.68e-06 ...\n $ liveness          : num [1:31] 0.0744 0.0512 0.157 0.118 0.0387 0.186 0.296 0.18 0.287 0.094 ...\n $ valence           : num [1:31] 0.82 0.919 0.405 0.573 0.884 0.809 0.407 0.0734 0.858 0.307 ...\n $ tempo             : num [1:31] 110 104 116 101 110 ...\n $ track_id          : chr [1:31] \"1NwDWbpg9dPH12xBd2ibrv\" \"0r5d5LmhLQwJVEw0kTEExp\" \"5EE1Uzg0JvtBhs6TRs33R0\" \"2O8kqbUJS1vkL3x9mF7WzM\" ...\n $ time_signature    : num [1:31] 4 4 4 4 4 4 4 4 4 4 ...\n $ duration_ms       : num [1:31] 255866 254666 298293 251000 226266 ...\n $ track_name        : chr [1:31] \"Holler\" \"Tell Me Why\" \"Let Love Lead The Way\" \"Right Back At Ya\" ...\n $ track_number      : num [1:31] 1 2 3 4 5 6 7 8 9 10 ...\n $ album_name        : chr [1:31] \"Forever\" \"Forever\" \"Forever\" \"Forever\" ...\n $ key_name          : chr [1:31] \"A#\" \"F\" \"B\" \"G#\" ...\n $ mode_name         : chr [1:31] \"minor\" \"minor\" \"major\" \"major\" ...\n $ key_mode          : chr [1:31] \"A# minor\" \"F minor\" \"B major\" \"G# major\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   artist_id = col_character(),\n  ..   album_id = col_character(),\n  ..   album_release_date = col_date(format = \"\"),\n  ..   album_release_year = col_double(),\n  ..   danceability = col_double(),\n  ..   energy = col_double(),\n  ..   key = col_double(),\n  ..   loudness = col_double(),\n  ..   mode = col_double(),\n  ..   speechiness = col_double(),\n  ..   acousticness = col_double(),\n  ..   instrumentalness = col_double(),\n  ..   liveness = col_double(),\n  ..   valence = col_double(),\n  ..   tempo = col_double(),\n  ..   track_id = col_character(),\n  ..   time_signature = col_double(),\n  ..   duration_ms = col_double(),\n  ..   track_name = col_character(),\n  ..   track_number = col_double(),\n  ..   album_name = col_character(),\n  ..   key_name = col_character(),\n  ..   mode_name = col_character(),\n  ..   key_mode = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n1.3.2 How many tracks are there per album?\n\ntracks_per_album &lt;- studio_album_tracks |&gt;\n  group_by(album_name, key_name) |&gt;\n  summarise(tracks = n(), .groups = \"drop\")\n\nggplot(tracks_per_album, aes(x = reorder(album_name, -tracks), y = tracks, fill = key_name)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Number of Tracks in Each Album\",\n       x = \"Album\",\n       y = \"Number of Tracks\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n1.3.3 What is the average length of each track? (Grouped by track number)\n\naverage_duration &lt;- studio_album_tracks |&gt;\n  mutate(duration_seconds = duration_ms / 1000) |&gt;\n  group_by(track_number) |&gt;\n  summarise(avg_duration = mean(duration_seconds, na.rm = TRUE))\n\nggplot(average_duration, aes(x = track_number, y = avg_duration)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average Track Duration by Track Number\",\n       x = \"Track Number\",\n       y = \"Average Duration (seconds)\") +\n  theme_minimal()",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Data Overview</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html",
    "href": "eda-JackHou.html",
    "title": "3  Style Analysis",
    "section": "",
    "text": "4 1 Purpose",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#define-the-goal",
    "href": "eda-JackHou.html#define-the-goal",
    "title": "3  Style Analysis",
    "section": "4.1 1.1 Define the Goal",
    "text": "4.1 1.1 Define the Goal\nMy goal is to analyse the change in style of an artist using the data in the uploaded CSV file (studio_album_tracks.csv). I will choose 10 features to help me analyse: acousticness, danceability, energy, instrumentalness, key, liveness, mode, speechiness, tempo, valence.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#about-each-features",
    "href": "eda-JackHou.html#about-each-features",
    "title": "3  Style Analysis",
    "section": "4.2 1.2 About each features",
    "text": "4.2 1.2 About each features\nSource from: https://help.spotontrack.com/article/what-do-the-audio-features-mean\n\nAcousticness is a confidence measure from 0.0 to 1.0 of whether the track is acoustic.\n1.0 represents high confidence the track is acoustic.\nDanceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\nA value of 0.0 is least danceable and 1.0 is most danceable.\nEnergy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. 1.0 represents highly energetic.\nInstrumentalness predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\nThe Key the track is in. Integers map to pitches using standard Pitch Class notation.\nE.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value is -1.\nLiveness detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\nMode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\nSpeechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\nThe overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\nValence is a measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#about-the-data-set-and-data-preprocessing",
    "href": "eda-JackHou.html#about-the-data-set-and-data-preprocessing",
    "title": "3  Style Analysis",
    "section": "4.3 1.3 About the data set and Data preprocessing",
    "text": "4.3 1.3 About the data set and Data preprocessing\n\n4.3.1 load the data\nAll the data we need is from the csv: studio_album_tracks. Path: https://github.com/rfordatascience/tidytuesday/blob/main/data/2021/2021-12-14/studio_album_tracks.csv\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(reshape2)\n\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\n# Load the CSV file\nstudio_album_tracks &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/studio_album_tracks.csv')\n\nRows: 31 Columns: 25\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): artist_name, artist_id, album_id, track_id, track_name, album_nam...\ndbl  (15): album_release_year, danceability, energy, key, loudness, mode, sp...\ndate  (1): album_release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Convert album_release_date to Date format\nstudio_album_tracks$album_release_date &lt;- as.Date(studio_album_tracks$album_release_date, format = \"%Y-%m-%d\")\n\n\n\n4.3.2 average audio features by year\nThis dataset contains data from 31 tracks in 3 albums. And the 3 albums (forever, spiceworld, spice) are released in three different years, 1996, 1997, and 2000 respectively.\nTherefore, we can first group by the year, and compare the style of tracks in different years.\nWe calculate the mean value of the features of tracks of 3 years and save them into the new dataset\n\nfeature_group_by_year &lt;- studio_album_tracks %&gt;%\n  group_by(album_release_year) %&gt;%\n  summarise(\n    avg_speechiness = mean(speechiness, na.rm = TRUE),\n    avg_acousticness = mean(acousticness, na.rm = TRUE),\n    avg_instrumentalness = mean(instrumentalness, na.rm = TRUE),\n    avg_liveness = mean(liveness, na.rm = TRUE),\n    avg_danceability = mean(danceability, na.rm = TRUE),\n    avg_energy = mean(energy, na.rm = TRUE),\n    avg_valence = mean(valence, na.rm = TRUE),\n#    avg_tempo = mean(tempo, na.rm = TRUE),\n#    avg_loudness = mean(loudness, na.rm = TRUE)\n  )\nfeature_group_by_year\n\n# A tibble: 3 × 8\n  album_release_year avg_speechiness avg_acousticness avg_instrumentalness\n               &lt;dbl&gt;           &lt;dbl&gt;            &lt;dbl&gt;                &lt;dbl&gt;\n1               1996          0.0483           0.0998              0.146  \n2               1997          0.0506           0.149               0.0299 \n3               2000          0.0353           0.153               0.00160\n# ℹ 4 more variables: avg_liveness &lt;dbl&gt;, avg_danceability &lt;dbl&gt;,\n#   avg_energy &lt;dbl&gt;, avg_valence &lt;dbl&gt;",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#plot-the-graph-of-average",
    "href": "eda-JackHou.html#plot-the-graph-of-average",
    "title": "3  Style Analysis",
    "section": "5.1 2.1 Plot the graph of average",
    "text": "5.1 2.1 Plot the graph of average\n\nfeature_summary &lt;- melt(feature_group_by_year, id.vars = \"album_release_year\")\n\n#plot\nggplot(feature_summary, aes(x = album_release_year, y = value, color = variable)) + \n  geom_line(size = 1) +\n  labs(\n    title = \"Trends in key Features of Style Over Time\",\n    x = \"year\",\n    y = \"average value\",\n    color = \"feature\"\n  ) + \n  theme_minimal() +\n  scale_color_manual(values = c(\n    \"avg_speechiness\" = \"blue\",\n    \"avg_acousticness\" = \"green\",\n    \"avg_instrumentalness\" = \"purple\",\n    \"avg_liveness\" = \"orange\",\n    \"avg_danceability\" = \"pink\",\n    \"avg_energy\" = \"yellow\",\n    \"avg_valence\" = \"red\"\n  ))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nFrom the graph above, we can see that the style change a little bit from 1996 to 1997. More detailed:\nThere are features that not show a great variance between three album:\n\nThe average speechiness of the tracks in three albums maintain the same from 1996 to 2000, at about 0.05, which is a very low value of the speechiness. This means that the all the tracks are non-speech-like tracks.\nThe average liveness increased a little bit in 1997, but decrease back to origin in 2000, and the value is all below 0.2. This means there is little presence of an audience in the recording, most of the audios are not live\nThe average danceability decreased a lot in 1997, but increase back to origin in 2000, and the values are almost higher than 0.6. This means most of their songs are danceable, but in 1997 it is not so danceable.\nThe average energy increased a little in 1997, but decrease back to origin in 2000, and the values are all higher than 0.7. This means most of their songs can let people feel fast, loud, and noisy.\n\nThere are 3 features that show a strictly increase or decrease trend in three album:\n\nThe average instrumentalness decrease from 0.15 to 0.02 in 1997 or even becomes near 0 in 2000. This means that the the use of instruments was reduced in 1997, and even in the subsequent tracks, instruments were hardly heard.\nThe average valence also decrease a lot, from 0.75 to 0.59. This means that the music sounds less positive in the newer tracks, but still spread a positive mood.\nThe average acousticness increase from 0.1 to 0.15, the increase is not so obvious. This means that the tracks is more acoustic.\n\nIn summary, all the tracks are non-speechiness and non-liveness. The artist try to change the style a little bit in 1997. In 1997, the songs are more energetic, more acoustic, and less positive.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#boringness-test",
    "href": "eda-JackHou.html#boringness-test",
    "title": "3  Style Analysis",
    "section": "5.2 2.2 Boringness Test",
    "text": "5.2 2.2 Boringness Test\nIn this test, I create an equation of calculating boringness:\n\\(boringness = loudness + tempo + (energy\\times100) + (danceability\\times100)\\)\nIf boringness value is low, then it is boring. Vice versa.\nThe boringness of each track in the album is shown by the following graph:\n\n# caluclate boringness data using the equation\nboringness_data &lt;- studio_album_tracks %&gt;%\n  mutate(boringness = loudness + tempo + (energy*100) + (danceability*100))\n\nggplot(boringness_data, aes(x = boringness, fill = album_name)) +\n  geom_histogram(position = \"identity\", alpha = 0.6, bins = 30) +\n  labs(\n    title = \"Histogram of Boringness by Album\",\n    x = \"Boringness\",\n    y = \"Frequency\",\n    fill = \"Album\"\n  ) +\n  theme_minimal() +\n  scale_fill_discrete(name = \"Album\")\n\n\n\n\n\n\n\n\nFrom this chart, we can see that the album with the highest average quality is the album Spice, which was the least boring when they first debuted. The album with the lowest average quality is the second album Spice World. The average value of the third album Forever has rebounded and even reached the highest value. This also confirms my analysis in the first part, which is consistent with the trend of their trying to make changes in some aspects, but finding that the effect is not good, and then returning to the original style.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "EDA-Cody.html",
    "href": "EDA-Cody.html",
    "title": "",
    "section": "",
    "text": "Code",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>EDA-Cody.html</span>"
    ]
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "Project Proposal Mayumi Morgan, Cody Da, Jack Hou, and Enrico Verità Data set: Spice up your Life\nWe will analyze the data set “Spice up your Life” which contains information regarding the famous music group the Spice Girls. This data set contains information on album release date, energy, liveliness, danceability, and general statistics on various Spice Girl tracks. We chose this set because we are interested in music and this seems fun and interesting topic. We want to analyze lyrics and maybe analyze which band member sings the most, or we could see which song is the best to dance to.\nOverarching research question:\n\nWhat kind of music did the spice girls make?\n\nDid their music style change over time? If so, how?\n\nWhat kind of themes did the Spice Girls sing about?\nWho was the most popular member?\n\nWho sang the most lines?\n\n\nWhy is it important:\n\nThe Spice Girls were a large part of the cultural zeitgeist of the 90s and early 2000s, influencing music, fashion, as well as other artists. Despite their relatively short time as a group, they remain popular is, as shown by their Olympic performance in 2012 at the London Olympic over a decade after their official disbandment. In 2019 the group reunited and embarked on a European tour. The “Spice World” tour became the highest grossing all-female tour from 2000-2020. This begs the question: what makes their music so successful?\n\nWhere the data comes from:\nThe data in this repo comes from Spotify and Genius. Thank you to the authors of the spotifyr and geniusr packages for making it easy to access data from these platforms!\nThere are 3 data sets about or related to the Spice Girls:\n\nstudio_album_tracks: Audio features of each song from the three studio albums by the Spice Girls. From Spotify.\nrelated artists: Artists deemed to be similar to the Spice Girls, with info about each artist including their musical genres and follower numbers. Includes a row with details for the Spice Girls, for comparison purposes. From Spotify.\nlyrics: Lyrics of each song from the three studio albums by the Spice Girls. From Genius.\n\nCredit: Jacquie Tran\n*taken from Tidytuesday",
    "crumbs": [
      "Appendices",
      "Proposal"
    ]
  },
  {
    "objectID": "sketch.html",
    "href": "sketch.html",
    "title": "Sketch",
    "section": "",
    "text": "Project Sketch 1\n\n\n\n\n\nProject Sketch 2",
    "crumbs": [
      "Appendices",
      "Sketch"
    ]
  }
]