[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Spice Girls Project",
    "section": "",
    "text": "Preface\nPosh, Ginger, Baby, Sporty, and Scary. What do these five words have in common?\nSPICE!!\nThe Spice Girls formed in 1994 after auditions were held to form a girl group to rival the boy bands dominating the airwaves at the time. By 1996, the group, consisting of Mel B (Scary), Melanie C (Sporty), Emma Bunton (Baby), Geri Halliwell-Horner (Ginger), Victoria Beckham (Posh), had found incredible success with their debut single “Wannabe.” Over the following five years, the Spice Girls emerged as superstars, and are now seen as definitive cultural icons of the 90s. In this data analysis, we will explore aspects of their music and lyrics to hopefully discover the reasons for their smashing success.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "Report",
    "section": "",
    "text": "Video Presentation\nVideo Presentation Link",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#lyrics-data",
    "href": "report.html#lyrics-data",
    "title": "Report",
    "section": "Lyrics Data",
    "text": "Lyrics Data\n\nData Set Structure\n\n\nspc_tbl_ [1,885 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name   : chr [1:1885] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ album_name    : chr [1:1885] \"Spice\" \"Spice\" \"Spice\" \"Spice\" ...\n $ track_number  : num [1:1885] 1 1 1 1 1 1 1 1 1 1 ...\n $ song_id       : num [1:1885] 89740 89740 89740 89740 89740 ...\n $ song_name     : chr [1:1885] \"Wannabe\" \"Wannabe\" \"Wannabe\" \"Wannabe\" ...\n $ line_number   : num [1:1885] 1 2 3 4 5 6 7 8 9 10 ...\n $ section_name  : chr [1:1885] \"Intro\" \"Intro\" \"Intro\" \"Intro\" ...\n $ line          : chr [1:1885] \"Hahaha\" \"Yo, I'll tell you what I want, what I really, really want\" \"So tell me what you want, what you really, really want\" \"I'll tell you what I want, what I really, really want\" ...\n $ section_artist: chr [1:1885] \"Scary, Ginger\" \"Scary, Ginger\" \"Scary, Ginger\" \"Scary, Ginger\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   album_name = col_character(),\n  ..   track_number = col_double(),\n  ..   song_id = col_double(),\n  ..   song_name = col_character(),\n  ..   line_number = col_double(),\n  ..   section_name = col_character(),\n  ..   line = col_character(),\n  ..   section_artist = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nTotal number of lines in Spice Girls songs\n\n\n# A tibble: 31 × 2\n   song_name                    total_lines\n   &lt;chr&gt;                              &lt;dbl&gt;\n 1 \"2 Become 1\"                          42\n 2 \"Denying\"                             71\n 3 \"Do It\"                               71\n 4 \"Get Down With Me\"                    53\n 5 \"Goodbye\"                             53\n 6 \"Holler\"                             105\n 7 \"If U Can\\x92t Dance\"                 73\n 8 \"If You Wanna Have Some Fun\"          68\n 9 \"Last Time Lover\"                     72\n10 \"Let Love Lead the Way\"               67\n# ℹ 21 more rows\n\n\n\n\nHow many song lines are there in each section category?",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#studio-album-tracks-data",
    "href": "report.html#studio-album-tracks-data",
    "title": "Report",
    "section": "Studio Album Tracks Data",
    "text": "Studio Album Tracks Data\n\nData Set Structure\n\n\nspc_tbl_ [31 × 25] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name       : chr [1:31] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ artist_id         : chr [1:31] \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" ...\n $ album_id          : chr [1:31] \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" ...\n $ album_release_date: Date[1:31], format: \"2000-01-01\" \"2000-01-01\" ...\n $ album_release_year: num [1:31] 2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ danceability      : num [1:31] 0.769 0.829 0.614 0.736 0.86 0.798 0.671 0.571 0.709 0.536 ...\n $ energy            : num [1:31] 0.819 0.764 0.788 0.779 0.71 0.751 0.75 0.481 0.872 0.539 ...\n $ key               : num [1:31] 10 5 11 8 1 5 1 0 7 11 ...\n $ loudness          : num [1:31] -3.94 -3.78 -5.55 -5.16 -4.21 ...\n $ mode              : num [1:31] 0 0 1 1 0 0 1 1 0 1 ...\n $ speechiness       : num [1:31] 0.0431 0.0431 0.027 0.0401 0.0356 0.0486 0.0279 0.0251 0.0443 0.0272 ...\n $ acousticness      : num [1:31] 0.0293 0.0287 0.155 0.0172 0.00259 0.009 0.188 0.177 0.253 0.744 ...\n $ instrumentalness  : num [1:31] 3.70e-03 3.29e-06 0.00 3.30e-03 3.57e-05 0.00 0.00 0.00 1.06e-02 5.68e-06 ...\n $ liveness          : num [1:31] 0.0744 0.0512 0.157 0.118 0.0387 0.186 0.296 0.18 0.287 0.094 ...\n $ valence           : num [1:31] 0.82 0.919 0.405 0.573 0.884 0.809 0.407 0.0734 0.858 0.307 ...\n $ tempo             : num [1:31] 110 104 116 101 110 ...\n $ track_id          : chr [1:31] \"1NwDWbpg9dPH12xBd2ibrv\" \"0r5d5LmhLQwJVEw0kTEExp\" \"5EE1Uzg0JvtBhs6TRs33R0\" \"2O8kqbUJS1vkL3x9mF7WzM\" ...\n $ time_signature    : num [1:31] 4 4 4 4 4 4 4 4 4 4 ...\n $ duration_ms       : num [1:31] 255866 254666 298293 251000 226266 ...\n $ track_name        : chr [1:31] \"Holler\" \"Tell Me Why\" \"Let Love Lead The Way\" \"Right Back At Ya\" ...\n $ track_number      : num [1:31] 1 2 3 4 5 6 7 8 9 10 ...\n $ album_name        : chr [1:31] \"Forever\" \"Forever\" \"Forever\" \"Forever\" ...\n $ key_name          : chr [1:31] \"A#\" \"F\" \"B\" \"G#\" ...\n $ mode_name         : chr [1:31] \"minor\" \"minor\" \"major\" \"major\" ...\n $ key_mode          : chr [1:31] \"A# minor\" \"F minor\" \"B major\" \"G# major\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   artist_id = col_character(),\n  ..   album_id = col_character(),\n  ..   album_release_date = col_date(format = \"\"),\n  ..   album_release_year = col_double(),\n  ..   danceability = col_double(),\n  ..   energy = col_double(),\n  ..   key = col_double(),\n  ..   loudness = col_double(),\n  ..   mode = col_double(),\n  ..   speechiness = col_double(),\n  ..   acousticness = col_double(),\n  ..   instrumentalness = col_double(),\n  ..   liveness = col_double(),\n  ..   valence = col_double(),\n  ..   tempo = col_double(),\n  ..   track_id = col_character(),\n  ..   time_signature = col_double(),\n  ..   duration_ms = col_double(),\n  ..   track_name = col_character(),\n  ..   track_number = col_double(),\n  ..   album_name = col_character(),\n  ..   key_name = col_character(),\n  ..   mode_name = col_character(),\n  ..   key_mode = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nHow many tracks are there per album?\n\n\n\n\n\n\n\n\n\n\n\nWhat is the average length of each track? (Grouped by track number)",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#define-the-goal",
    "href": "report.html#define-the-goal",
    "title": "Report",
    "section": "1.1 Define the Goal",
    "text": "1.1 Define the Goal\nMy goal is to analyse the change in style of an artist using the data in the uploaded CSV file (studio_album_tracks.csv). I will choose 10 features to help me analyse: acousticness, danceability, energy, instrumentalness, key, liveness, mode, speechiness, tempo, valence.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#about-each-features",
    "href": "report.html#about-each-features",
    "title": "Report",
    "section": "1.2 About each features",
    "text": "1.2 About each features\nSource from: https://help.spotontrack.com/article/what-do-the-audio-features-mean\n\nAcousticness is a confidence measure from 0.0 to 1.0 of whether the track is acoustic.\n1.0 represents high confidence the track is acoustic.\nDanceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\nA value of 0.0 is least danceable and 1.0 is most danceable.\nEnergy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. 1.0 represents highly energetic.\nInstrumentalness predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\nThe Key the track is in. Integers map to pitches using standard Pitch Class notation.\nE.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value is -1.\nLiveness detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\nMode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\nSpeechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\nThe overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\nValence is a measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#about-the-data-set-and-data-preprocessing",
    "href": "report.html#about-the-data-set-and-data-preprocessing",
    "title": "Report",
    "section": "1.3 About the data set and Data preprocessing",
    "text": "1.3 About the data set and Data preprocessing\n\nload the data\nAll the data we need is from the csv: studio_album_tracks. Path: https://github.com/rfordatascience/tidytuesday/blob/main/data/2021/2021-12-14/studio_album_tracks.csv\n\n\naverage audio features by year\nThis dataset contains data from 31 tracks in 3 albums. And the 3 albums (forever, spiceworld, spice) are released in three different years, 1996, 1997, and 2000 respectively.\nTherefore, we can first group by the year, and compare the style of tracks in different years.\nWe calculate the mean value of the features of tracks of 3 years and save them into the new dataset\n\n\n# A tibble: 3 × 8\n  album_release_year avg_speechiness avg_acousticness avg_instrumentalness\n               &lt;dbl&gt;           &lt;dbl&gt;            &lt;dbl&gt;                &lt;dbl&gt;\n1               1996          0.0483           0.0998              0.146  \n2               1997          0.0506           0.149               0.0299 \n3               2000          0.0353           0.153               0.00160\n# ℹ 4 more variables: avg_liveness &lt;dbl&gt;, avg_danceability &lt;dbl&gt;,\n#   avg_energy &lt;dbl&gt;, avg_valence &lt;dbl&gt;",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#plot-the-graph-of-average",
    "href": "report.html#plot-the-graph-of-average",
    "title": "Report",
    "section": "2.1 Plot the graph of average",
    "text": "2.1 Plot the graph of average\n\n\n\n\n\n\n\n\n\nFrom the graph above, we can see that the style change a little bit from 1996 to 1997. More detailed:\nThere are features that not show a great variance between three album:\n\nThe average speechiness of the tracks in three albums maintain the same from 1996 to 2000, at about 0.05, which is a very low value of the speechiness. This means that the all the tracks are non-speech-like tracks.\nThe average liveness increased a little bit in 1997, but decrease back to origin in 2000, and the value is all below 0.2. This means there is little presence of an audience in the recording, most of the audios are not live\nThe average danceability decreased a lot in 1997, but increase back to origin in 2000, and the values are almost higher than 0.6. This means most of their songs are danceable, but in 1997 it is not so danceable.\nThe average energy increased a little in 1997, but decrease back to origin in 2000, and the values are all higher than 0.7. This means most of their songs can let people feel fast, loud, and noisy.\n\nThere are 3 features that show a strictly increase or decrease trend in three album:\n\nThe average instrumentalness decrease from 0.15 to 0.02 in 1997 or even becomes near 0 in 2000. This means that the the use of instruments was reduced in 1997, and even in the subsequent tracks, instruments were hardly heard.\nThe average valence also decrease a lot, from 0.75 to 0.59. This means that the music sounds less positive in the newer tracks, but still spread a positive mood.\nThe average acousticness increase from 0.1 to 0.15, the increase is not so obvious. This means that the tracks is more acoustic.\n\nIn summary, all the tracks are non-speechiness and non-liveness. The artist try to change the style a little bit in 1997. In 1997, the songs are more energetic, more acoustic, and less positive.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#boringness-test",
    "href": "report.html#boringness-test",
    "title": "Report",
    "section": "2.2 Boringness Test",
    "text": "2.2 Boringness Test\nIn this test, I create an equation of calculating boringness:\n\\(boringness = loudness + tempo + (energy\\times100) + (danceability\\times100)\\)\nIf boringness value is low, then it is boring. Vice versa.\nThe boringness of each track in the album is shown by the following graph:\n\n\n\n\n\n\n\n\n\nFrom this chart, we can see that the album with the highest average quality is the album Spice, which was the least boring when they first debuted. The album with the lowest average quality is the second album Spice World. The average value of the third album Forever has rebounded and even reached the highest value. This also confirms my analysis in the first part, which is consistent with the trend of their trying to make changes in some aspects, but finding that the effect is not good, and then returning to the original style.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#most-popular-member",
    "href": "report.html#most-popular-member",
    "title": "Report",
    "section": "Most Popular Member",
    "text": "Most Popular Member\n\n\n\n\n\n\nWhat can the Spice Girls’ lyrics tell audiences about them and their music? Above is a bar graph counting the amount of total lines for each Spice Girl in their entire discography. These numbers may reveal interesting information about which members were more popular, or whether the member’s popularity correlated to their music. Maybe their personalities and public persona were more important to popularity than the amount of lines they had? Lyrically, the most popular member was Sporty Spice (Melanie C), followed by Baby Spice (Emma Bunton), then Scary (Mel B), Ginger (Geri Halliwell-Horner), and finally Posh (Victoria Beckham).\nPerhaps different albums promoted different members? Released in 1996, Scary Spice was actually featured the most in their first album, Spice. Coming in second and third were Ginger and Baby Spice. The release of the second album Spiceworld, however, placed Sporty Spice in a more prominent role musically. She rose from having the fourth most lines to being the clear favorite, as the graph below shows. Scary Spice fell to third, with Baby Spice rising to second and Ginger falling further behind. Why did Sporty Spice receive so many more during the second album? There may not be one clear answer. Audience preferences, musical ability, and more are all factors that could explain the change. One thing however, is certain: Sporty Spice, on paper, became the most popular member of the Spice Girls.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#most-popular-member-by-album",
    "href": "report.html#most-popular-member-by-album",
    "title": "Report",
    "section": "Most Popular Member by Album",
    "text": "Most Popular Member by Album\n\n\n\n\n\n\nBut what about the third album? Geri Halliwell-Horner left the group in 1998 to the shock of fans citing creative differences, exhaustion, as well as rumored arguments with Mel B. In response, The four remaining members remained and adapted their musical style and image for their next album Forever.\nDespite a new R/B sound, Sporty Spice remained as the member with the most lines. Interestingly, the album has the least amount of lines out of their entire discography, which attests to their new musical approach after the loss of Halliwell-Horner.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#top-words",
    "href": "report.html#top-words",
    "title": "Report",
    "section": "Top Words",
    "text": "Top Words\n\n\n\n\n\n\nMoving to the lyrics themselves, the graph above shows the top words in all of the Spice Girls’ lyrics, with filler words removed. “Love” takes the top spot, highlighting the prominence of relationship themes, both romantic and platonic, in their music. “Time” is next. This could refer to time in romantic and platonic relationships. I.e. “not wanting to waste time.” Additionally, “dance” “shake,” and “move” all suggest that partying or celebrating are important topics in the Spice Girls’ music. This all aligns with the fun, independent, confident image the Spice Girls’ advertised during the 90s and beyond.\nThis is further supported by a sentiment analysis of the lyrics. The results show that the Spice Girls’ songs contain more positive sentiment than negative.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#sentiment-analysis",
    "href": "report.html#sentiment-analysis",
    "title": "Report",
    "section": "Sentiment Analysis",
    "text": "Sentiment Analysis\n\n\n\n\n\n\nTo further expand our lyrical analysis, we can use a tf_idf generative model (more information in the appendix) to generate 3 major themes. As shown below, the model groups key words into different “topics,” or themes. we can then analyze specific songs and albums to determine which themes are most prominent. This information can be helpful in determining which themes may have resonated with listeners when taking into account the popularity of the respective songs and albums.\nTheme one’s top words include “time” and “deeper,” therefore, we will call it the “time theme.” Key words for theme two include “love”, “holler”, and “generation” while theme three is largely defined by “dance”. Thus, they will be called the “love theme” and “dance theme”, respectively.The themes are clearly subjective, with pretty significant overlap. This could mean that the Spice Girls explored only a couple of significant themes, like relationships and love, throughout their discography, opting to instead evolve in other ways.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#main-themes",
    "href": "report.html#main-themes",
    "title": "Report",
    "section": "3 Main Themes",
    "text": "3 Main Themes",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#theme-distribution-across-album",
    "href": "report.html#theme-distribution-across-album",
    "title": "Report",
    "section": "Theme Distribution Across Album",
    "text": "Theme Distribution Across Album\n\n\n\n\n\n\nTo further explore how the Spice Girls changed lyrically, the graph above shows the topic distribution across albums. Interestingly, each album as a distinct topic, indicating that the group may have decided to focus on a unique theme for each album. For Spice, the time theme is first. The Dance theme leads in Spiceworld, while for Forever the love theme is highest.\nAdditionally, the time theme lessens for each album. This shows that the Spice Girls may have been purposefully aiming to explore new avenues in their lyrics.\nOverall, the topic distribution across their albums gives interesting insight into the changing lyrical style of the Spice Girls.\nThese various lyrical analyses have shed light on an often overlooked aspect of the Spice Girls: their lyrics. While a topic distribution analysis may have shown that their quite significant overlap at times in their lyrical themes, the album distribution indicates an attempt to evolve musically. Additionally the analysis of line distribution among the members revealed a possible favorite, or center: Sporty Spice.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "Project Proposal Mayumi Morgan, Cody Da, Jack Hou, and Enrico Verità Data set: Spice up your Life\nWe will analyze the data set “Spice up your Life” which contains information regarding the famous music group the Spice Girls. This data set contains information on album release date, energy, liveliness, danceability, and general statistics on various Spice Girl tracks. We chose this set because we are interested in music and this seems fun and interesting topic. We want to analyze lyrics and maybe analyze which band member sings the most, or we could see which song is the best to dance to.\nOverarching research question:\n\nWhat kind of music did the spice girls make?\n\nDid their music style change over time? If so, how?\n\nWhat kind of themes did the Spice Girls sing about?\nWho was the most popular member?\n\nWho sang the most lines?\n\n\nWhy is it important:\n\nThe Spice Girls were a large part of the cultural zeitgeist of the 90s and early 2000s, influencing music, fashion, as well as other artists. Despite their relatively short time as a group, they remain popular is, as shown by their Olympic performance in 2012 at the London Olympic over a decade after their official disbandment. In 2019 the group reunited and embarked on a European tour. The “Spice World” tour became the highest grossing all-female tour from 2000-2020. This begs the question: what makes their music so successful?\n\nWhere the data comes from:\nThe data in this repo comes from Spotify and Genius. Thank you to the authors of the spotifyr and geniusr packages for making it easy to access data from these platforms!\nThere are 3 data sets about or related to the Spice Girls:\n\nstudio_album_tracks: Audio features of each song from the three studio albums by the Spice Girls. From Spotify.\nrelated artists: Artists deemed to be similar to the Spice Girls, with info about each artist including their musical genres and follower numbers. Includes a row with details for the Spice Girls, for comparison purposes. From Spotify.\nlyrics: Lyrics of each song from the three studio albums by the Spice Girls. From Genius.\n\nCredit: Jacquie Tran\n*taken from Tidytuesday",
    "crumbs": [
      "Appendices",
      "Proposal"
    ]
  },
  {
    "objectID": "sketch.html",
    "href": "sketch.html",
    "title": "Sketch",
    "section": "",
    "text": "Project Sketch 1\n\n\n\n\n\nProject Sketch 2",
    "crumbs": [
      "Appendices",
      "Sketch"
    ]
  },
  {
    "objectID": "eda-mayumi.html",
    "href": "eda-mayumi.html",
    "title": "Appendix A — Data Overview",
    "section": "",
    "text": "A.1 Data Upload\nlyrics &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/lyrics.csv')\n\nRows: 1885 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): artist_name, album_name, song_name, section_name, line, section_artist\ndbl (3): track_number, song_id, line_number\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstudio_album_tracks &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/studio_album_tracks.csv')\n\nRows: 31 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): artist_name, artist_id, album_id, track_id, track_name, album_nam...\ndbl  (15): album_release_year, danceability, energy, key, loudness, mode, sp...\ndate  (1): album_release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Data Overview</span>"
    ]
  },
  {
    "objectID": "eda-mayumi.html#lyrics-data",
    "href": "eda-mayumi.html#lyrics-data",
    "title": "Appendix A — Data Overview",
    "section": "A.2 Lyrics Data",
    "text": "A.2 Lyrics Data\n\nA.2.1 Data Set Structure\n\nstr(lyrics)\n\nspc_tbl_ [1,885 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name   : chr [1:1885] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ album_name    : chr [1:1885] \"Spice\" \"Spice\" \"Spice\" \"Spice\" ...\n $ track_number  : num [1:1885] 1 1 1 1 1 1 1 1 1 1 ...\n $ song_id       : num [1:1885] 89740 89740 89740 89740 89740 ...\n $ song_name     : chr [1:1885] \"Wannabe\" \"Wannabe\" \"Wannabe\" \"Wannabe\" ...\n $ line_number   : num [1:1885] 1 2 3 4 5 6 7 8 9 10 ...\n $ section_name  : chr [1:1885] \"Intro\" \"Intro\" \"Intro\" \"Intro\" ...\n $ line          : chr [1:1885] \"Hahaha\" \"Yo, I'll tell you what I want, what I really, really want\" \"So tell me what you want, what you really, really want\" \"I'll tell you what I want, what I really, really want\" ...\n $ section_artist: chr [1:1885] \"Scary, Ginger\" \"Scary, Ginger\" \"Scary, Ginger\" \"Scary, Ginger\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   album_name = col_character(),\n  ..   track_number = col_double(),\n  ..   song_id = col_double(),\n  ..   song_name = col_character(),\n  ..   line_number = col_double(),\n  ..   section_name = col_character(),\n  ..   line = col_character(),\n  ..   section_artist = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nThe above information shows the structure of the lyrics data set. There are 9 variables being measured and 1,885 data points. All of the variables are identified as either a col_double or col_character and measure the various song lines in the Spice Girls music.\n\n\nA.2.2 Total number of lines in Spice Girls songs\n\nlyrics |&gt;\n  group_by(song_name) |&gt;\n  summarise(total_lines = max(line_number)) |&gt;\n  arrange(desc(total_lines))\n\n# A tibble: 31 × 2\n   song_name              total_lines\n   &lt;chr&gt;                        &lt;dbl&gt;\n 1 \"Holler\"                       105\n 2 \"Saturday Night Divas\"          84\n 3 \"Love Thing\"                    80\n 4 \"Tell Me Why\"                   80\n 5 \"If U Can\\x92t Dance\"           73\n 6 \"Last Time Lover\"               72\n 7 \"Denying\"                       71\n 8 \"Do It\"                         71\n 9 \"Right Back At Ya\"              71\n10 \"Naked\"                         70\n# ℹ 21 more rows\n\n\nThis table shows that there the total number of song lines in each song ever written and performed by the Spice Girls. The song with the most lines is Holler (105) and the song with the least number of lines is Something Kinda Funny (34).\n\n\nA.2.3 How many song lines are there in each section category?\n\nsection_count &lt;- lyrics |&gt;\n  count(section_name)\n\nggplot(section_count, aes(x = reorder(section_name, -n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(\n    title = \"Amount of Song Lines per Section\",\n    x = \"Section Name\",\n    y = \"Number of Lines\") +\n  coord_flip()\n\n\n\n\n\n\n\n\nThe above graph shows that the most song lines are categorized as a part of the chorus. Whereas very few lines are technically apart of the Melanie B.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Data Overview</span>"
    ]
  },
  {
    "objectID": "eda-mayumi.html#studio-album-tracks-data",
    "href": "eda-mayumi.html#studio-album-tracks-data",
    "title": "Appendix A — Data Overview",
    "section": "A.3 Studio Album Tracks Data",
    "text": "A.3 Studio Album Tracks Data\n\nA.3.1 Data Set Structure\n\nstr(studio_album_tracks)\n\nspc_tbl_ [31 × 25] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name       : chr [1:31] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ artist_id         : chr [1:31] \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" ...\n $ album_id          : chr [1:31] \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" ...\n $ album_release_date: Date[1:31], format: \"2000-01-01\" \"2000-01-01\" ...\n $ album_release_year: num [1:31] 2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ danceability      : num [1:31] 0.769 0.829 0.614 0.736 0.86 0.798 0.671 0.571 0.709 0.536 ...\n $ energy            : num [1:31] 0.819 0.764 0.788 0.779 0.71 0.751 0.75 0.481 0.872 0.539 ...\n $ key               : num [1:31] 10 5 11 8 1 5 1 0 7 11 ...\n $ loudness          : num [1:31] -3.94 -3.78 -5.55 -5.16 -4.21 ...\n $ mode              : num [1:31] 0 0 1 1 0 0 1 1 0 1 ...\n $ speechiness       : num [1:31] 0.0431 0.0431 0.027 0.0401 0.0356 0.0486 0.0279 0.0251 0.0443 0.0272 ...\n $ acousticness      : num [1:31] 0.0293 0.0287 0.155 0.0172 0.00259 0.009 0.188 0.177 0.253 0.744 ...\n $ instrumentalness  : num [1:31] 3.70e-03 3.29e-06 0.00 3.30e-03 3.57e-05 0.00 0.00 0.00 1.06e-02 5.68e-06 ...\n $ liveness          : num [1:31] 0.0744 0.0512 0.157 0.118 0.0387 0.186 0.296 0.18 0.287 0.094 ...\n $ valence           : num [1:31] 0.82 0.919 0.405 0.573 0.884 0.809 0.407 0.0734 0.858 0.307 ...\n $ tempo             : num [1:31] 110 104 116 101 110 ...\n $ track_id          : chr [1:31] \"1NwDWbpg9dPH12xBd2ibrv\" \"0r5d5LmhLQwJVEw0kTEExp\" \"5EE1Uzg0JvtBhs6TRs33R0\" \"2O8kqbUJS1vkL3x9mF7WzM\" ...\n $ time_signature    : num [1:31] 4 4 4 4 4 4 4 4 4 4 ...\n $ duration_ms       : num [1:31] 255866 254666 298293 251000 226266 ...\n $ track_name        : chr [1:31] \"Holler\" \"Tell Me Why\" \"Let Love Lead The Way\" \"Right Back At Ya\" ...\n $ track_number      : num [1:31] 1 2 3 4 5 6 7 8 9 10 ...\n $ album_name        : chr [1:31] \"Forever\" \"Forever\" \"Forever\" \"Forever\" ...\n $ key_name          : chr [1:31] \"A#\" \"F\" \"B\" \"G#\" ...\n $ mode_name         : chr [1:31] \"minor\" \"minor\" \"major\" \"major\" ...\n $ key_mode          : chr [1:31] \"A# minor\" \"F minor\" \"B major\" \"G# major\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   artist_id = col_character(),\n  ..   album_id = col_character(),\n  ..   album_release_date = col_date(format = \"\"),\n  ..   album_release_year = col_double(),\n  ..   danceability = col_double(),\n  ..   energy = col_double(),\n  ..   key = col_double(),\n  ..   loudness = col_double(),\n  ..   mode = col_double(),\n  ..   speechiness = col_double(),\n  ..   acousticness = col_double(),\n  ..   instrumentalness = col_double(),\n  ..   liveness = col_double(),\n  ..   valence = col_double(),\n  ..   tempo = col_double(),\n  ..   track_id = col_character(),\n  ..   time_signature = col_double(),\n  ..   duration_ms = col_double(),\n  ..   track_name = col_character(),\n  ..   track_number = col_double(),\n  ..   album_name = col_character(),\n  ..   key_name = col_character(),\n  ..   mode_name = col_character(),\n  ..   key_mode = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nThe above information gives a general outline of the studio album data. This data set tracks the components of the Spice Girls music with variables such as tempo, danceability, and energy. There are 25 variables overall and 31 data points, one for each song by the Spice Girls.\n\n\nA.3.2 How many tracks are there per album?\n\ntracks_per_album &lt;- studio_album_tracks |&gt;\n  group_by(album_name, key_name) |&gt;\n  summarise(tracks = n(), .groups = \"drop\")\n\nggplot(tracks_per_album, aes(x = reorder(album_name, -tracks), y = tracks, fill = key_name)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Number of Tracks in Each Album\",\n       x = \"Album\",\n       y = \"Number of Tracks\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\nA.3.3 What is the average length of each track? (Grouped by track number)\n\naverage_duration &lt;- studio_album_tracks |&gt;\n  mutate(duration_seconds = duration_ms / 1000) |&gt;\n  group_by(track_number) |&gt;\n  summarise(avg_duration = mean(duration_seconds, na.rm = TRUE))\n\nggplot(average_duration, aes(x = track_number, y = avg_duration)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average Track Duration by Track Number\",\n       x = \"Track Number\",\n       y = \"Average Duration (seconds)\") +\n  theme_minimal()",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Data Overview</span>"
    ]
  },
  {
    "objectID": "eda-enrico.html",
    "href": "eda-enrico.html",
    "title": "Appendix B — Lyrical Analysis",
    "section": "",
    "text": "lyrics &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/lyrics.csv')\n\nstudio_album_tracks &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/studio_album_tracks.csv')\n\nrelated_artists &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/related_artists.csv')\n\n\nlibrary(tidyverse)\n#For each album, calculate mean values for danceability, energy, and valence\nstudio_album_tracks %&gt;%\n  group_by(album_name) %&gt;%\n  summarise(\n    danceability_mean = mean(danceability),\n    energy_mean = mean(energy),\n    valence_mean = mean(valence)) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    album_name = factor(\n      album_name, levels = c(\"Spice\", \"Spiceworld\", \"Forever\"))) %&gt;%\n  arrange(album_name)\n\n# A tibble: 3 × 4\n  album_name danceability_mean energy_mean valence_mean\n  &lt;fct&gt;                  &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n1 Spice                  0.694       0.731        0.756\n2 Spiceworld             0.570       0.776        0.642\n3 Forever                0.695       0.722        0.583\n\n\nWhat do the variables mean?:\nData link: https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-12-14/readme.md\n\n#Who is the most popular member?\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(showtext)\nlibrary(topicmodels)\nlibrary(tidytext)\nlibrary(tokenizers)\nlibrary(tidytext)\nlibrary(ggtext)\n\n\n\nmember_lines &lt;- lyrics |&gt;\n  select(section_artist) |&gt; \n  mutate(Sporty = str_detect(section_artist, \"Sporty\")) |&gt; \n  mutate(Scary = str_detect(section_artist, \"Scary\")) |&gt;\n  mutate(Posh = str_detect(section_artist, \"Posh\")) |&gt;\n  mutate(Baby = str_detect(section_artist, \"Baby\")) |&gt; \n  mutate(Ginger = str_detect(section_artist, \"Ginger\")) |&gt; \n  summarize(\n    total_Sporty = sum(Sporty, na.rm = TRUE),\n    total_Scary = sum(Scary, na.rm = TRUE),\n    total_Posh = sum(Posh, na.rm = TRUE),\n    total_Baby = sum(Baby, na.rm = TRUE),\n    total_Ginger = sum(Ginger, na.rm = TRUE)\n  ) \n\nmember_lines &lt;- member_lines |&gt; \n  pivot_longer(cols = everything(), \n               names_to = \"Member\", \n               values_to = \"Number of Lines\") |&gt; \n  mutate(Member = str_replace(Member, \"total_\", \"\"))\n\ngg &lt;- ggplot(member_lines |&gt; \n         mutate(Member = fct_reorder(Member, `Number of Lines`)), \n       aes(x = Member, y = `Number of Lines`, fill = Member)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(\n    title = \"Number of Total Lines for each Spice Girl\",\n    x = \"Spice Girls\",\n    y = \"Number of Lines\",\n    caption = \"Source: Your Dataset\",\n    subtitle = \"The total lines for each member of the Spice Girls in the entire discography in order to determine who the most popular member was. Sporty Spice has the most, followed by Baby Spice, then Scary Spice, then Ginger Spice, then Posh Spice.\"\n  ) +\n  theme_minimal(base_family = \"lato\") +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.line = element_line(color = \"gray40\"),\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 12, color = \"gray50\", hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"gray50\"),\n    legend.position = \"none\"\n  ) +\n  scale_fill_viridis_d(option = \"Set2\")\n\n  \nggplotly(gg) |&gt; layout(showlegend = FALSE,\n        x = 0.5,\n        y = 1.05,\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = FALSE,\n        font = list(size = 12, color = \"gray50\", family = \"lato\"),\n        align = \"center\",\n    xaxis = list(title = \"\"), \n    yaxis = list(title = \"\")  \n  )\n\n\n\n\n\nWhat can the Spice Girls’ lyrics tell audiences about them and their music? Above is a bar graph counting the amount of total lines for each Spice Girl in their entire discography. These numbers may reveal interesting information about which members were more popular, or whether the member’s popularity correlated to their music. Maybe their personalities and public persona were more important to popularity than the amount of lines they had? Lyrically, the most popular member was Sporty Spice (Melanie C), followed by Baby Spice (Emma Bunton), then Scary (Mel B), Ginger (Geri Halliwell-Horner), and finally Posh (Victoria Beckham).\nPerhaps different albums promoted different members? Released in 1996, Scary Spice was actually featured the most in their first album, Spice. Coming in second and third were Ginger and Baby Spice. The release of the second album Spiceworld, however, placed Sporty Spice in a more prominent role musically. She rose from having the fourth most lines to being the clear favorite, as the graph below shows. Scary Spice fell to third, with Baby Spice rising to second and Ginger falling further behind. Why did Sporty Spice receive so many more during the second album? There may not be one clear answer. Audience preferences, musical ability, and more are all factors that could explain the change. One thing however, is certain: Sporty Spice, on paper, became the most popular member of the Spice Girls.\n\n#What About Individual Albums?\nmember_album_lines_per_album &lt;- lyrics |&gt;\n  select(album_name, section_artist) |&gt; \n  mutate(\n    Sporty = str_detect(section_artist, \"Sporty\"),\n    Scary = str_detect(section_artist, \"Scary\"),\n    Posh = str_detect(section_artist, \"Posh\"),\n    Baby = str_detect(section_artist, \"Baby\"),\n    Ginger = str_detect(section_artist, \"Ginger\")\n  ) |&gt; \n  group_by(album_name) |&gt; \n  summarize(\n    total_Sporty = sum(Sporty, na.rm = TRUE),\n    total_Scary = sum(Scary, na.rm = TRUE),\n    total_Posh = sum(Posh, na.rm = TRUE),\n    total_Baby = sum(Baby, na.rm = TRUE),\n    total_Ginger = sum(Ginger, na.rm = TRUE),\n    .groups = \"drop\"\n  ) |&gt; \n  pivot_longer(\n    cols = starts_with(\"total_\"),\n    names_to = \"Member\",\n    values_to = \"Number of Lines\"\n  ) |&gt; \n  mutate(Member = str_replace(Member, \"total_\", \"\"))  \n\nmember_album_lines_per_album &lt;- member_album_lines_per_album |&gt; \n  mutate(album_name = factor(album_name, levels = c(\"Spice\", \"Spiceworld\", \"Forever\")))\n\n\ngg2 &lt;- ggplot(member_album_lines_per_album |&gt; \n         mutate(Member = fct_reorder(Member, `Number of Lines`)), \n                aes(x = album_name, y = `Number of Lines`, fill = Member)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(\n    title = \"Number of Lines for Each Spice Girl by Album\",\n    x = \"Album\",\n    y = \"Number of Lines\",\n    fill = \"Spice Girl\",\n    caption = \"Source: Your Dataset\"\n  ) +\n  theme_minimal(base_family = \"lato\") +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.line = element_line(color = \"gray40\"),\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 12, color = \"gray50\", hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"gray50\"),\n    legend.position = \"bottom\", \n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 11)\n  ) +\n  scale_fill_brewer(palette = \"Set2\")\n\nggplotly(gg2)\n\n\n\n\n\nBut what about the third album? Geri Halliwell-Horner left the group in 1998 to the shock of fans citing creative differences, exhaustion, as well as rumored arguments with Mel B. In response, The four remaining members remained and adapted their musical style and image for their next album Forever.\nDespite a new R/B sound, Sporty Spice remained as the member with the most lines. Interestingly, the album has the least amount of lines out of their entire discography, which attests to their new musical approach after the loss of Halliwell-Horner.\n\n#What are the main lyrical themes? Let's start with top words\nlibrary(tokenizers)\nlibrary(tidytext)\nlyrics_data &lt;- lyrics |&gt; \n  mutate(clean_lyrics = str_to_lower(line),  \n         clean_lyrics = str_replace_all(clean_lyrics, \"[^a-z\\\\s]\", \"\"),  \n         clean_lyrics = str_squish(clean_lyrics)) \n\ntokens &lt;- lyrics_data |&gt; \n  unnest_tokens(word, clean_lyrics)  \n\ncustom_stop_words &lt;- tibble(word = c(\"na\", \"la\", \"oh\", \"yeah\", \"im\", \"ill\", \"ya\"))\n\ndata(\"stop_words\")\ncombined_stop_words &lt;- bind_rows(stop_words, custom_stop_words)\n\ntokens &lt;- tokens |&gt; \n  anti_join(combined_stop_words, by = \"word\")\n\nword_counts &lt;- tokens|&gt; \n  count(word, sort = TRUE)\n\n\nbigrams &lt;- lyrics_data |&gt; \n  unnest_tokens(bigram, clean_lyrics, token = \"ngrams\", n = 2)\n\nbigrams_filtered &lt;- bigrams |&gt; \n  separate(bigram, into = c(\"word1\", \"word2\"), sep = \" \") |&gt; \n  filter(!word1 %in% stop_words$word, !word2 %in% stop_words$word) |&gt; \n  unite(\"bigram\", word1, word2, sep = \" \")\n\ndata(\"stop_words\")\ntokens &lt;- tokens |&gt; \n  anti_join(stop_words, by = \"word\")\n\nword_counts &lt;- tokens |&gt; \n  count(word, sort = TRUE)\n\n\nhead(word_counts)\n\n# A tibble: 6 × 2\n  word      n\n  &lt;chr&gt; &lt;int&gt;\n1 love    137\n2 time    105\n3 wanna   102\n4 youre    93\n5 dont     92\n6 gotta    64\n\ngg3 &lt;- word_counts |&gt; \n  slice_max(n, n = 20) |&gt; \n  ggplot(aes(x = reorder(word, n), y = n, fill = n)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  scale_fill_gradient(low = \"lightblue\", high = \"steelblue\") +\n  labs(\n    title = \"Top Words in Song Lyrics\",\n    subtitle = \"A bar chart showing the 20 most frequent words in lyrics after removing stop words\",\n    x = \"Word\",\n    y = \"Count\",\n    caption = \"Source: Your Dataset\"\n  ) +\n  theme_minimal(base_family = \"lato\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    plot.caption = element_text(size = 10, color = \"gray40\"),\n    axis.text = element_text(size = 11),\n    axis.title = element_text(size = 12),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank()\n  )\n\nggplotly(gg3)\n\n\n\n\n\nMoving to the lyrics themselves, the graph above shows the top words in all of the Spice Girls’ lyrics, with filler words removed. “Love” takes the top spot, highlighting the prominence of relationship themes, both romantic and platonic, in their music. “Time” is next. This could refer to time in romantic and platonic relationships. I.e. “not wanting to waste time.” Additionally, “dance” “shake,” and “move” all suggest that partying or celebrating are important topics in the Spice Girls’ music. This all aligns with the fun, independent, confident image the Spice Girls’ advertised during the 90s and beyond.\nThis is further supported by a sentiment analysis of the lyrics. The results show that the Spice Girls’ songs contain more positive sentiment than negative.\n\n#Sentiment analysis\n\nsentiment_scores &lt;- tokens |&gt; \n  inner_join(get_sentiments(\"bing\"), by = \"word\") |&gt; \n  count(sentiment, sort = TRUE)\n\ngg4 &lt;- sentiment_scores |&gt; \n  ggplot(aes(x = sentiment, y = n, fill = sentiment)) +\n  geom_col() +\n  labs(title = \"Sentiment Analysis of Lyrics\", x = \"Sentiment\", y = \"Count\") +\n  scale_fill_manual(values = c(\"positive\" = \"green\", \"negative\" = \"red\")) +\n  theme_minimal(base_family = \"lato\") +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.line = element_line(color = \"gray40\"),\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 12, color = \"gray50\", hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"gray50\"),\n    legend.position = \"bottom\", \n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 11)\n  )\n\nggplotly(gg4) |&gt; layout(showlegend = FALSE)\n\n\n\n\n\nTo further expand our lyrical analysis, we can use a tf_idf generative model (more information in the appendix) to generate 3 major themes. As shown below, the model groups key words into different “topics,” or themes. we can then analyze specific songs and albums to determine which themes are most prominent. This information can be helpful in determining which themes may have resonated with listeners when taking into account the popularity of the respective songs and albums.\nTheme one’s top words include “time” and “deeper,” therefore, we will call it the “time theme.” Key words for theme two include “love”, “holler”, and “generation” while theme three is largely defined by “dance”. Thus, they will be called the “love theme” and “dance theme”, respectively.The themes are clearly subjective, with pretty significant overlap. This could mean that the Spice Girls explored only a couple of significant themes, like relationships and love, throughout their discography, opting to instead evolve in other ways.\n\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(tokenizers)\n\ntf_idf &lt;- tokens |&gt; \n  count(song_name, word, sort = TRUE) |&gt;  \n  bind_tf_idf(word, song_name, n)\n\n\ntf_idf |&gt; \n  arrange(desc(tf_idf)) |&gt; \n  head(10)\n\n# A tibble: 10 × 6\n   song_name               word           n    tf   idf tf_idf\n   &lt;chr&gt;                   &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 \"Saturday Night Divas\"  deeper        41 0.253  3.43  0.869\n 2 \"Move Over\"             generation    41 0.306  2.74  0.839\n 3 \"If U Can\\x92t Dance\"   dance         60 0.279  2.74  0.765\n 4 \"Holler\"                holler        48 0.212  3.43  0.729\n 5 \"Naked\"                 naked         29 0.190  3.43  0.651\n 6 \"Saturday Night Divas\"  saturday      29 0.179  3.43  0.615\n 7 \"Weekend Love\"          weekend       16 0.158  3.43  0.544\n 8 \"Something Kinda Funny\" kinda         18 0.137  3.43  0.472\n 9 \"Mama\"                  loving        22 0.171  2.74  0.467\n10 \"Something Kinda Funny\" funny         17 0.130  3.43  0.446\n\nbigram_counts &lt;- bigrams |&gt; \n  count(bigram, sort = TRUE)\n\n\nlibrary(topicmodels)\n\n\ndtm &lt;- tokens |&gt; \n  count(song_name, word) |&gt; \n  cast_dtm(song_name, word, n)\n\n\nlda_model &lt;- LDA(dtm, k = 3, control = list(seed = 123))  # 'k' is the number of topics\ntopics &lt;- tidy(lda_model, matrix = \"beta\")\n\ntopic_names &lt;- c(\"1\" = \"Time Theme\", \"2\" = \"Love Theme\", \"3\" = \"Dance Theme\")\n\n\ntopics &lt;- topics %&gt;%\n  mutate(topic = factor(topic, levels = names(topic_names), labels = topic_names))\n\n\ntopics |&gt; \n  group_by(topic) |&gt; \n  slice_max(beta, n = 10) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = reorder_within(term, beta, topic), y = beta, fill = factor(topic))) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ topic, scales = \"free\") +\n  coord_flip() +\n  scale_x_reordered() +\n  labs(title = \"Top Words per Topic\", x = \"Word\", y = \"proportion\",\n       caption = \"Spice Girls TidyTuesday Dataset\",\n       subtitle = \"Graph showing the topic distribution of the 3 Spice Girls albums\"\n  ) +\n  scale_fill_brewer(palette = \"Set2\")\n\n\n\n\n\n\n\ntopics &lt;- tidy(lda_model, matrix = \"beta\")  \n\ntop_words &lt;- topics %&gt;%\n  group_by(topic) %&gt;%\n  slice_max(beta, n = 10) %&gt;%  \n  ungroup()\n\nSong_topics &lt;- tidy(lda_model, matrix = \"gamma\")\n\nSong_topics_wide &lt;- Song_topics %&gt;%\n  pivot_wider(\n    names_from = topic,  \n    values_from = gamma,  \n  )\n\ntopic_names &lt;- c(\"Time Theme\", \"Love Theme\", \"Dance Theme\")  \ncolnames(Song_topics_wide)[2:(1 + length(topic_names))] &lt;- topic_names\n\n\n\nhead(Song_topics_wide)\n\n# A tibble: 6 × 4\n  document         `Time Theme` `Love Theme` `Dance Theme`\n  &lt;chr&gt;                   &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;\n1 2 Become 1           0.000392     0.999         0.000392\n2 Denying              1.00         0.000242      0.000242\n3 Do It                1.00         0.000245      0.000245\n4 Get Down With Me     0.999        0.000516      0.000516\n5 Goodbye              0.000383     0.999         0.000383\n6 Holler               0.000151     1.00          0.000151\n\n\n\n#topic distribution by album\n\n#&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nlibrary(tidyverse)\nlibrary(plotly)\n\n#=======\ntopics_wide &lt;- read_csv(\"data/topics_wide.csv\")\n#&gt;&gt;&gt;&gt;&gt;&gt;&gt; 0be6d4b3db5c7574f5062e824e6514a7ae478811\n\n\nalbum_topics &lt;- topics_wide |&gt; \n  group_by(Album) |&gt;\n  summarize(\"Time theme\" = mean(`1`, na.rm = TRUE), \n         \"Love theme\" = mean(`2`, na.rm = TRUE), \n         \"Dance theme\" = mean(`3`, na.rm = TRUE)) |&gt; \n  pivot_longer(cols = c(`Time theme`, `Love theme`, `Dance theme`),\n               names_to = \"topics\",\n               values_to = \"average\"\n  )\n  \n\nalbum_topics &lt;- album_topics |&gt; \n  mutate(Album = fct_reorder(Album, `average`))\n\ngg6 &lt;- \n  ggplot(\n  album_topics, \n  aes(x = topics, y = average, fill = topics)\n) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~Album)+\n  labs(\n    title = \"Topic Distribution Across Spice Girls Albums\",\n    x = \"\",\n    y = \"Mean Topic Proportion\",\n    fill = \"Topic\",\n    caption = \"Source: Your Dataset\",\n    subtitle = \"Graph showing the topic distribution of the 3 Spice Girls albums\"\n  ) +\n  theme_minimal(base_family = \"lato\") +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.line = element_line(color = \"gray40\"),\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 12, color = \"gray50\", hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"gray50\"),\n    legend.position = \"bottom\", \n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 11),\n    axis.text.x = element_text(size = 8, angle = 45, hjust = 1)\n\n  ) +\n  scale_fill_brewer(palette = \"Set2\")\n\nggplotly(gg6) |&gt; layout(showlegend = FALSE,\n        x = 0.5,\n        y = 1.05,\n        xref = \"paper\",\n        yref = \"paper\",\n        showarrow = FALSE,\n        font = list(size = 12, color = \"gray50\", family = \"lato\"),\n        align = \"center\",\n    xaxis = list(title = \"\"),  \n    yaxis = list(title = \"\")   \n  )\n\n\n\n\n\nTo further explore how the Spice Girls changed lyrically, the graph above shows the topic distribution across albums. Interestingly, each album as a distinct topic, indicating that the group may have decided to focus on a unique theme for each album. For Spice, the time theme is first. The Dance theme leads in Spiceworld, while for Forever the love theme is highest.\nAdditionally, the time theme lessens for each album. This shows that the Spice Girls may have been purposefully aiming to explore new avenues in their lyrics.\nOverall, the topic distribution across their albums gives interesting insight into the changing lyrical style of the Spice Girls.\nThese various lyrical analyses have shed light on an often overlooked aspect of the Spice Girls: their lyrics. While a topic distribution analysis may have shown that their quite significant overlap at times in their lyrical themes, the album distribution indicates an attempt to evolve musically. Additionally the analysis of line distribution among the members revealed a possible favorite, or center: Sporty Spice.\n#What is TF-IDF?\nTF-IDF stands for term frequency-inverse document frequency. This model can be applied to a few different purposes, but I use it specifically for text summarization and keyword extraction to find and quantify the importance of specific words in Spice Girls songs.\nTerm frequency: There are multiple ways to define frequency, but here, it means the frequency of a particular word in the songs; how often a word is said in a song.\nInverse document frequency: I use this to find how common or uncommon a word is in the lyrics. This is particularly important to filter out filler words like “of” and “as.”\nUsing both TF and IDF, I tried to find which words hold the most relevance in their songs. The higher the TF-IDF score, the more relevance the word holds in the song, while the less relevant it is, the closer the score is to zero.\nThis model isn’t perfect, though. There may be some words, like “love,” that are extremely common in their songs. However, their tf-idf score may be low because it is not especially unique, though it is still extremely important.\nhttps://www.capitalone.com/tech/machine-learning/understanding-tf-idf/\n#What is LDA Analysis?\nLDA analysis is a “probabilistic generative model” used here to analyze a collection of text–Spice Girls lyrics. You could also use this for articles, books, and other text. LDA approaches documents as a collection of themes or “Topics,” which it them hopes to uncover by analyzing the words of the document.\nhttps://medium.com/@pinakdatta/understanding-lda-unveiling-hidden-topics-in-text-data-9bbbd25ae162\nhttps://en.wikipedia.org/wiki/Latent_Dirichlet_allocation#:~:text=In%20natural%20language%20processing%2C%20latent,of%20a%20Bayesian%20topic%20model.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Lyrical Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html",
    "href": "eda-JackHou.html",
    "title": "Appendix C — Style Analysis",
    "section": "",
    "text": "D 1 Purpose",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#define-the-goal",
    "href": "eda-JackHou.html#define-the-goal",
    "title": "Appendix C — Style Analysis",
    "section": "D.1 1.1 Define the Goal",
    "text": "D.1 1.1 Define the Goal\nMy goal is to analyse the change in style of an artist using the data in the uploaded CSV file (studio_album_tracks.csv). I will choose 10 features to help me analyse: acousticness, danceability, energy, instrumentalness, key, liveness, mode, speechiness, tempo, valence.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#about-each-features",
    "href": "eda-JackHou.html#about-each-features",
    "title": "Appendix C — Style Analysis",
    "section": "D.2 1.2 About each features",
    "text": "D.2 1.2 About each features\nSource from: https://help.spotontrack.com/article/what-do-the-audio-features-mean\n\nAcousticness is a confidence measure from 0.0 to 1.0 of whether the track is acoustic.\n1.0 represents high confidence the track is acoustic.\nDanceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\nA value of 0.0 is least danceable and 1.0 is most danceable.\nEnergy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. 1.0 represents highly energetic.\nInstrumentalness predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\nThe Key the track is in. Integers map to pitches using standard Pitch Class notation.\nE.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value is -1.\nLiveness detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\nMode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\nSpeechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\nThe overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\nValence is a measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#about-the-data-set-and-data-preprocessing",
    "href": "eda-JackHou.html#about-the-data-set-and-data-preprocessing",
    "title": "Appendix C — Style Analysis",
    "section": "D.3 1.3 About the data set and Data preprocessing",
    "text": "D.3 1.3 About the data set and Data preprocessing\n\nD.3.1 load the data\nAll the data we need is from the csv: studio_album_tracks. Path: https://github.com/rfordatascience/tidytuesday/blob/main/data/2021/2021-12-14/studio_album_tracks.csv\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(reshape2)\n\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\n# Load the CSV file\nstudio_album_tracks &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-12-14/studio_album_tracks.csv')\n\nRows: 31 Columns: 25\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): artist_name, artist_id, album_id, track_id, track_name, album_nam...\ndbl  (15): album_release_year, danceability, energy, key, loudness, mode, sp...\ndate  (1): album_release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Convert album_release_date to Date format\nstudio_album_tracks$album_release_date &lt;- as.Date(studio_album_tracks$album_release_date, format = \"%Y-%m-%d\")\n\n\n\nD.3.2 average audio features by year\nThis dataset contains data from 31 tracks in 3 albums. And the 3 albums (forever, spiceworld, spice) are released in three different years, 1996, 1997, and 2000 respectively.\nTherefore, we can first group by the year, and compare the style of tracks in different years.\nWe calculate the mean value of the features of tracks of 3 years and save them into the new dataset\n\nfeature_group_by_year &lt;- studio_album_tracks %&gt;%\n  group_by(album_release_year) %&gt;%\n  summarise(\n    avg_speechiness = mean(speechiness, na.rm = TRUE),\n    avg_acousticness = mean(acousticness, na.rm = TRUE),\n    avg_instrumentalness = mean(instrumentalness, na.rm = TRUE),\n    avg_liveness = mean(liveness, na.rm = TRUE),\n    avg_danceability = mean(danceability, na.rm = TRUE),\n    avg_energy = mean(energy, na.rm = TRUE),\n    avg_valence = mean(valence, na.rm = TRUE),\n#    avg_tempo = mean(tempo, na.rm = TRUE),\n#    avg_loudness = mean(loudness, na.rm = TRUE)\n  )\nfeature_group_by_year\n\n# A tibble: 3 × 8\n  album_release_year avg_speechiness avg_acousticness avg_instrumentalness\n               &lt;dbl&gt;           &lt;dbl&gt;            &lt;dbl&gt;                &lt;dbl&gt;\n1               1996          0.0483           0.0998              0.146  \n2               1997          0.0506           0.149               0.0299 \n3               2000          0.0353           0.153               0.00160\n# ℹ 4 more variables: avg_liveness &lt;dbl&gt;, avg_danceability &lt;dbl&gt;,\n#   avg_energy &lt;dbl&gt;, avg_valence &lt;dbl&gt;",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#plot-the-graph-of-average",
    "href": "eda-JackHou.html#plot-the-graph-of-average",
    "title": "Appendix C — Style Analysis",
    "section": "E.1 2.1 Plot the graph of average",
    "text": "E.1 2.1 Plot the graph of average\n\nfeature_summary &lt;- melt(feature_group_by_year, id.vars = \"album_release_year\")\n\n#plot\nggplot(feature_summary, aes(x = album_release_year, y = value, color = variable)) + \n  geom_line(size = 1) +\n  labs(\n    title = \"Trends in key Features of Style Over Time\",\n    x = \"year\",\n    y = \"average value\",\n    color = \"feature\"\n  ) + \n  theme_minimal() +\n  scale_color_manual(values = c(\n    \"avg_speechiness\" = \"blue\",\n    \"avg_acousticness\" = \"green\",\n    \"avg_instrumentalness\" = \"purple\",\n    \"avg_liveness\" = \"orange\",\n    \"avg_danceability\" = \"pink\",\n    \"avg_energy\" = \"yellow\",\n    \"avg_valence\" = \"red\"\n  ))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nFrom the graph above, we can see that the style change a little bit from 1996 to 1997. More detailed:\nThere are features that not show a great variance between three album:\n\nThe average speechiness of the tracks in three albums maintain the same from 1996 to 2000, at about 0.05, which is a very low value of the speechiness. This means that the all the tracks are non-speech-like tracks.\nThe average liveness increased a little bit in 1997, but decrease back to origin in 2000, and the value is all below 0.2. This means there is little presence of an audience in the recording, most of the audios are not live\nThe average danceability decreased a lot in 1997, but increase back to origin in 2000, and the values are almost higher than 0.6. This means most of their songs are danceable, but in 1997 it is not so danceable.\nThe average energy increased a little in 1997, but decrease back to origin in 2000, and the values are all higher than 0.7. This means most of their songs can let people feel fast, loud, and noisy.\n\nThere are 3 features that show a strictly increase or decrease trend in three album:\n\nThe average instrumentalness decrease from 0.15 to 0.02 in 1997 or even becomes near 0 in 2000. This means that the the use of instruments was reduced in 1997, and even in the subsequent tracks, instruments were hardly heard.\nThe average valence also decrease a lot, from 0.75 to 0.59. This means that the music sounds less positive in the newer tracks, but still spread a positive mood.\nThe average acousticness increase from 0.1 to 0.15, the increase is not so obvious. This means that the tracks is more acoustic.\n\nIn summary, all the tracks are non-speechiness and non-liveness. The artist try to change the style a little bit in 1997. In 1997, the songs are more energetic, more acoustic, and less positive.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "eda-JackHou.html#boringness-test",
    "href": "eda-JackHou.html#boringness-test",
    "title": "Appendix C — Style Analysis",
    "section": "E.2 2.2 Boringness Test",
    "text": "E.2 2.2 Boringness Test\nIn this test, I create an equation of calculating boringness:\n\\(boringness = loudness + tempo + (energy\\times100) + (danceability\\times100)\\)\nIf boringness value is low, then it is boring. Vice versa.\nThe boringness of each track in the album is shown by the following graph:\n\n# caluclate boringness data using the equation\nboringness_data &lt;- studio_album_tracks %&gt;%\n  mutate(boringness = loudness + tempo + (energy*100) + (danceability*100))\n\nggplot(boringness_data, aes(x = boringness, fill = album_name)) +\n  geom_histogram(position = \"identity\", alpha = 0.6, bins = 30) +\n  labs(\n    title = \"Histogram of Boringness by Album\",\n    x = \"Boringness\",\n    y = \"Frequency\",\n    fill = \"Album\"\n  ) +\n  theme_minimal() +\n  scale_fill_discrete(name = \"Album\")\n\n\n\n\n\n\n\n\nFrom this chart, we can see that the album with the highest average quality is the album Spice, which was the least boring when they first debuted. The album with the lowest average quality is the second album Spice World. The average value of the third album Forever has rebounded and even reached the highest value. This also confirms my analysis in the first part, which is consistent with the trend of their trying to make changes in some aspects, but finding that the effect is not good, and then returning to the original style.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Style Analysis</span>"
    ]
  },
  {
    "objectID": "EDA-Cody.html",
    "href": "EDA-Cody.html",
    "title": "Appendix D — What kind of music do the spice girls make?",
    "section": "",
    "text": "library(readr)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nstudio_album_tracks &lt;- read_csv(\"data/studio_album_tracks.csv\")\n\nRows: 31 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): artist_name, artist_id, album_id, track_id, track_name, album_nam...\ndbl  (15): album_release_year, danceability, energy, key, loudness, mode, sp...\ndate  (1): album_release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nstr(studio_album_tracks)\n\nspc_tbl_ [31 × 25] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name       : chr [1:31] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ artist_id         : chr [1:31] \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" ...\n $ album_id          : chr [1:31] \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" ...\n $ album_release_date: Date[1:31], format: \"2000-01-01\" \"2000-01-01\" ...\n $ album_release_year: num [1:31] 2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ danceability      : num [1:31] 0.769 0.829 0.614 0.736 0.86 0.798 0.671 0.571 0.709 0.536 ...\n $ energy            : num [1:31] 0.819 0.764 0.788 0.779 0.71 0.751 0.75 0.481 0.872 0.539 ...\n $ key               : num [1:31] 10 5 11 8 1 5 1 0 7 11 ...\n $ loudness          : num [1:31] -3.94 -3.78 -5.55 -5.16 -4.21 ...\n $ mode              : num [1:31] 0 0 1 1 0 0 1 1 0 1 ...\n $ speechiness       : num [1:31] 0.0431 0.0431 0.027 0.0401 0.0356 0.0486 0.0279 0.0251 0.0443 0.0272 ...\n $ acousticness      : num [1:31] 0.0293 0.0287 0.155 0.0172 0.00259 0.009 0.188 0.177 0.253 0.744 ...\n $ instrumentalness  : num [1:31] 3.70e-03 3.29e-06 0.00 3.30e-03 3.57e-05 0.00 0.00 0.00 1.06e-02 5.68e-06 ...\n $ liveness          : num [1:31] 0.0744 0.0512 0.157 0.118 0.0387 0.186 0.296 0.18 0.287 0.094 ...\n $ valence           : num [1:31] 0.82 0.919 0.405 0.573 0.884 0.809 0.407 0.0734 0.858 0.307 ...\n $ tempo             : num [1:31] 110 104 116 101 110 ...\n $ track_id          : chr [1:31] \"1NwDWbpg9dPH12xBd2ibrv\" \"0r5d5LmhLQwJVEw0kTEExp\" \"5EE1Uzg0JvtBhs6TRs33R0\" \"2O8kqbUJS1vkL3x9mF7WzM\" ...\n $ time_signature    : num [1:31] 4 4 4 4 4 4 4 4 4 4 ...\n $ duration_ms       : num [1:31] 255866 254666 298293 251000 226266 ...\n $ track_name        : chr [1:31] \"Holler\" \"Tell Me Why\" \"Let Love Lead The Way\" \"Right Back At Ya\" ...\n $ track_number      : num [1:31] 1 2 3 4 5 6 7 8 9 10 ...\n $ album_name        : chr [1:31] \"Forever\" \"Forever\" \"Forever\" \"Forever\" ...\n $ key_name          : chr [1:31] \"A#\" \"F\" \"B\" \"G#\" ...\n $ mode_name         : chr [1:31] \"minor\" \"minor\" \"major\" \"major\" ...\n $ key_mode          : chr [1:31] \"A# minor\" \"F minor\" \"B major\" \"G# major\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   artist_id = col_character(),\n  ..   album_id = col_character(),\n  ..   album_release_date = col_date(format = \"\"),\n  ..   album_release_year = col_double(),\n  ..   danceability = col_double(),\n  ..   energy = col_double(),\n  ..   key = col_double(),\n  ..   loudness = col_double(),\n  ..   mode = col_double(),\n  ..   speechiness = col_double(),\n  ..   acousticness = col_double(),\n  ..   instrumentalness = col_double(),\n  ..   liveness = col_double(),\n  ..   valence = col_double(),\n  ..   tempo = col_double(),\n  ..   track_id = col_character(),\n  ..   time_signature = col_double(),\n  ..   duration_ms = col_double(),\n  ..   track_name = col_character(),\n  ..   track_number = col_double(),\n  ..   album_name = col_character(),\n  ..   key_name = col_character(),\n  ..   mode_name = col_character(),\n  ..   key_mode = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\nread_csv(\"data/studio_album_tracks.csv\")\n\nRows: 31 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (9): artist_name, artist_id, album_id, track_id, track_name, album_nam...\ndbl  (15): album_release_year, danceability, energy, key, loudness, mode, sp...\ndate  (1): album_release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 31 × 25\n   artist_name artist_id          album_id album_release_date album_release_year\n   &lt;chr&gt;       &lt;chr&gt;              &lt;chr&gt;    &lt;date&gt;                          &lt;dbl&gt;\n 1 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 2 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 3 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 4 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 5 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 6 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 7 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 8 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 9 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n10 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n# ℹ 21 more rows\n# ℹ 20 more variables: danceability &lt;dbl&gt;, energy &lt;dbl&gt;, key &lt;dbl&gt;,\n#   loudness &lt;dbl&gt;, mode &lt;dbl&gt;, speechiness &lt;dbl&gt;, acousticness &lt;dbl&gt;,\n#   instrumentalness &lt;dbl&gt;, liveness &lt;dbl&gt;, valence &lt;dbl&gt;, tempo &lt;dbl&gt;,\n#   track_id &lt;chr&gt;, time_signature &lt;dbl&gt;, duration_ms &lt;dbl&gt;, track_name &lt;chr&gt;,\n#   track_number &lt;dbl&gt;, album_name &lt;chr&gt;, key_name &lt;chr&gt;, mode_name &lt;chr&gt;,\n#   key_mode &lt;chr&gt;\n\nstudio_album_tracks %&gt;% \ngroup_by(album_release_year)\n\n# A tibble: 31 × 25\n# Groups:   album_release_year [3]\n   artist_name artist_id          album_id album_release_date album_release_year\n   &lt;chr&gt;       &lt;chr&gt;              &lt;chr&gt;    &lt;date&gt;                          &lt;dbl&gt;\n 1 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 2 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 3 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 4 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 5 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 6 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 7 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 8 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 9 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n10 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n# ℹ 21 more rows\n# ℹ 20 more variables: danceability &lt;dbl&gt;, energy &lt;dbl&gt;, key &lt;dbl&gt;,\n#   loudness &lt;dbl&gt;, mode &lt;dbl&gt;, speechiness &lt;dbl&gt;, acousticness &lt;dbl&gt;,\n#   instrumentalness &lt;dbl&gt;, liveness &lt;dbl&gt;, valence &lt;dbl&gt;, tempo &lt;dbl&gt;,\n#   track_id &lt;chr&gt;, time_signature &lt;dbl&gt;, duration_ms &lt;dbl&gt;, track_name &lt;chr&gt;,\n#   track_number &lt;dbl&gt;, album_name &lt;chr&gt;, key_name &lt;chr&gt;, mode_name &lt;chr&gt;,\n#   key_mode &lt;chr&gt;\n\n\n\nlibrary(ggplot2)\nggplot(studio_album_tracks, aes(x = album_release_year , y = tempo)) +\n  geom_point(color = \"purple\") +\n  labs(title = \"spice girls music\" , x = \"album release date\" , \"y = tempo\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nlibrary(dplyr)\n\naverage_tempo &lt;- studio_album_tracks %&gt;%\n  group_by(album_release_year) %&gt;% \n  summarize(average_tempo = mean(tempo))\n\n\nlibrary(ggplot2)\nggplot(average_tempo, aes(x = album_release_year, y = average_tempo)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average Tempo of Albums\" , x = \"album release date\" , y = \"tempo\")",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>D</span>  <span class='chapter-title'>What kind of music do the spice girls make?</span>"
    ]
  },
  {
    "objectID": "additional_info.html",
    "href": "additional_info.html",
    "title": "Appendix E — Additional Information",
    "section": "",
    "text": "#What is TF-IDF?\nTF-IDF stands for term frequency-inverse document frequency. This model can be applied to a few different purposes, but I use it specifically for text summarization and keyword extraction to find and quantify the importance of specific words in Spice Girls songs.\nTerm frequency: There are multiple ways to define frequency, but here, it means the frequency of a particular word in the songs; how often a word is said in a song.\nInverse document frequency: I use this to find how common or uncommon a word is in the lyrics. This is particularly important to filter out filler words like “of” and “as.”\nUsing both TF and IDF, I tried to find which words hold the most relevance in their songs. The higher the TF-IDF score, the more relevance the word holds in the song, while the less relevant it is, the closer the score is to zero.\nThis model isn’t perfect, though. There may be some words, like “love,” that are extremely common in their songs. However, their tf-idf score may be low because it is not especially unique, though it is still extremely important.\nhttps://www.capitalone.com/tech/machine-learning/understanding-tf-idf/\n#What is LDA Analysis?\nLDA analysis is a “probabilistic generative model” used here to analyze a collection of text–Spice Girls lyrics. You could also use this for articles, books, and other text. LDA approaches documents as a collection of themes or “Topics,” which it them hopes to uncover by analyzing the words of the document.\nhttps://medium.com/@pinakdatta/understanding-lda-unveiling-hidden-topics-in-text-data-9bbbd25ae162\nhttps://en.wikipedia.org/wiki/Latent_Dirichlet_allocation#:~:text=In%20natural%20language%20processing%2C%20latent,of%20a%20Bayesian%20topic%20model.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>E</span>  <span class='chapter-title'>Additional Information</span>"
    ]
  },
  {
    "objectID": "report.html#presentation-slides",
    "href": "report.html#presentation-slides",
    "title": "Report",
    "section": "Presentation Slides",
    "text": "Presentation Slides\nPresentation Slides Link",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#necessary-libraries",
    "href": "report.html#necessary-libraries",
    "title": "Report",
    "section": "Necessary Libraries",
    "text": "Necessary Libraries",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#data-overview",
    "href": "report.html#data-overview",
    "title": "Report",
    "section": "1 Data Overview",
    "text": "1 Data Overview\n\n1.1 Lyrics Data Set\n\n\nspc_tbl_ [1,885 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name   : chr [1:1885] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ album_name    : chr [1:1885] \"Spice\" \"Spice\" \"Spice\" \"Spice\" ...\n $ track_number  : num [1:1885] 1 1 1 1 1 1 1 1 1 1 ...\n $ song_id       : num [1:1885] 89740 89740 89740 89740 89740 ...\n $ song_name     : chr [1:1885] \"Wannabe\" \"Wannabe\" \"Wannabe\" \"Wannabe\" ...\n $ line_number   : num [1:1885] 1 2 3 4 5 6 7 8 9 10 ...\n $ section_name  : chr [1:1885] \"Intro\" \"Intro\" \"Intro\" \"Intro\" ...\n $ line          : chr [1:1885] \"Hahaha\" \"Yo, I'll tell you what I want, what I really, really want\" \"So tell me what you want, what you really, really want\" \"I'll tell you what I want, what I really, really want\" ...\n $ section_artist: chr [1:1885] \"Scary, Ginger\" \"Scary, Ginger\" \"Scary, Ginger\" \"Scary, Ginger\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   album_name = col_character(),\n  ..   track_number = col_double(),\n  ..   song_id = col_double(),\n  ..   song_name = col_character(),\n  ..   line_number = col_double(),\n  ..   section_name = col_character(),\n  ..   line = col_character(),\n  ..   section_artist = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n1.2 Total number of lines in Spice Girls songs\n\n\n# A tibble: 31 × 2\n   song_name                    total_lines\n   &lt;chr&gt;                              &lt;dbl&gt;\n 1 \"2 Become 1\"                          42\n 2 \"Denying\"                             71\n 3 \"Do It\"                               71\n 4 \"Get Down With Me\"                    53\n 5 \"Goodbye\"                             53\n 6 \"Holler\"                             105\n 7 \"If U Can\\x92t Dance\"                 73\n 8 \"If You Wanna Have Some Fun\"          68\n 9 \"Last Time Lover\"                     72\n10 \"Let Love Lead the Way\"               67\n# ℹ 21 more rows\n\n\n\n\n1.3 How many song lines are there in each section category?\n\n\n\n\n\n\n\n\n\n\n\n1.4 Studio Album Tracks Data Set\n\n\nspc_tbl_ [31 × 25] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ artist_name       : chr [1:31] \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" \"Spice Girls\" ...\n $ artist_id         : chr [1:31] \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" \"0uq5PttqEjj3IH1bzwcrXF\" ...\n $ album_id          : chr [1:31] \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" \"4jbWZmf7kRxCBD6tgVepYh\" ...\n $ album_release_date: Date[1:31], format: \"2000-01-01\" \"2000-01-01\" ...\n $ album_release_year: num [1:31] 2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ danceability      : num [1:31] 0.769 0.829 0.614 0.736 0.86 0.798 0.671 0.571 0.709 0.536 ...\n $ energy            : num [1:31] 0.819 0.764 0.788 0.779 0.71 0.751 0.75 0.481 0.872 0.539 ...\n $ key               : num [1:31] 10 5 11 8 1 5 1 0 7 11 ...\n $ loudness          : num [1:31] -3.94 -3.78 -5.55 -5.16 -4.21 ...\n $ mode              : num [1:31] 0 0 1 1 0 0 1 1 0 1 ...\n $ speechiness       : num [1:31] 0.0431 0.0431 0.027 0.0401 0.0356 0.0486 0.0279 0.0251 0.0443 0.0272 ...\n $ acousticness      : num [1:31] 0.0293 0.0287 0.155 0.0172 0.00259 0.009 0.188 0.177 0.253 0.744 ...\n $ instrumentalness  : num [1:31] 3.70e-03 3.29e-06 0.00 3.30e-03 3.57e-05 0.00 0.00 0.00 1.06e-02 5.68e-06 ...\n $ liveness          : num [1:31] 0.0744 0.0512 0.157 0.118 0.0387 0.186 0.296 0.18 0.287 0.094 ...\n $ valence           : num [1:31] 0.82 0.919 0.405 0.573 0.884 0.809 0.407 0.0734 0.858 0.307 ...\n $ tempo             : num [1:31] 110 104 116 101 110 ...\n $ track_id          : chr [1:31] \"1NwDWbpg9dPH12xBd2ibrv\" \"0r5d5LmhLQwJVEw0kTEExp\" \"5EE1Uzg0JvtBhs6TRs33R0\" \"2O8kqbUJS1vkL3x9mF7WzM\" ...\n $ time_signature    : num [1:31] 4 4 4 4 4 4 4 4 4 4 ...\n $ duration_ms       : num [1:31] 255866 254666 298293 251000 226266 ...\n $ track_name        : chr [1:31] \"Holler\" \"Tell Me Why\" \"Let Love Lead The Way\" \"Right Back At Ya\" ...\n $ track_number      : num [1:31] 1 2 3 4 5 6 7 8 9 10 ...\n $ album_name        : chr [1:31] \"Forever\" \"Forever\" \"Forever\" \"Forever\" ...\n $ key_name          : chr [1:31] \"A#\" \"F\" \"B\" \"G#\" ...\n $ mode_name         : chr [1:31] \"minor\" \"minor\" \"major\" \"major\" ...\n $ key_mode          : chr [1:31] \"A# minor\" \"F minor\" \"B major\" \"G# major\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   artist_name = col_character(),\n  ..   artist_id = col_character(),\n  ..   album_id = col_character(),\n  ..   album_release_date = col_date(format = \"\"),\n  ..   album_release_year = col_double(),\n  ..   danceability = col_double(),\n  ..   energy = col_double(),\n  ..   key = col_double(),\n  ..   loudness = col_double(),\n  ..   mode = col_double(),\n  ..   speechiness = col_double(),\n  ..   acousticness = col_double(),\n  ..   instrumentalness = col_double(),\n  ..   liveness = col_double(),\n  ..   valence = col_double(),\n  ..   tempo = col_double(),\n  ..   track_id = col_character(),\n  ..   time_signature = col_double(),\n  ..   duration_ms = col_double(),\n  ..   track_name = col_character(),\n  ..   track_number = col_double(),\n  ..   album_name = col_character(),\n  ..   key_name = col_character(),\n  ..   mode_name = col_character(),\n  ..   key_mode = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n1.5 How many tracks are there per album?\n\n\n\n\n\n\n\n\n\n\n\n1.6 What is the average length of each track? (Grouped by track number)",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#analysis-of-music-over-time",
    "href": "report.html#analysis-of-music-over-time",
    "title": "Report",
    "section": "2 Analysis of Music Over Time",
    "text": "2 Analysis of Music Over Time\n\n2.1 Define the Goal\nMy goal is to analyse the change in style of an artist using the data in the uploaded CSV file (studio_album_tracks.csv). I will choose 10 features to help me analyse: acousticness, danceability, energy, instrumentalness, key, liveness, mode, speechiness, tempo, valence.\n\n\n2.2 About each features\nSource from: https://help.spotontrack.com/article/what-do-the-audio-features-mean\n\nAcousticness is a confidence measure from 0.0 to 1.0 of whether the track is acoustic.\n1.0 represents high confidence the track is acoustic.\nDanceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\nA value of 0.0 is least danceable and 1.0 is most danceable.\nEnergy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy. 1.0 represents highly energetic.\nInstrumentalness predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\nThe Key the track is in. Integers map to pitches using standard Pitch Class notation.\nE.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value is -1.\nLiveness detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\nMode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\nSpeechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\nThe overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\nValence is a measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\n\n\n\n2.3 About the Data Set and Data preprocessing\n\nLoad the Data\nAll the data we need is from the csv: studio_album_tracks. Path: https://github.com/rfordatascience/tidytuesday/blob/main/data/2021/2021-12-14/studio_album_tracks.csv\n\n\nAverage Audio Features by Year\nThis dataset contains data from 31 tracks in 3 albums. And the 3 albums (forever, spiceworld, spice) are released in three different years, 1996, 1997, and 2000 respectively.\nTherefore, we can first group by the year, and compare the style of tracks in different years.\nWe calculate the mean value of the features of tracks of 3 years and save them into the new dataset\n\n\n# A tibble: 3 × 8\n  album_release_year avg_speechiness avg_acousticness avg_instrumentalness\n               &lt;dbl&gt;           &lt;dbl&gt;            &lt;dbl&gt;                &lt;dbl&gt;\n1               1996          0.0483           0.0998              0.146  \n2               1997          0.0506           0.149               0.0299 \n3               2000          0.0353           0.153               0.00160\n# ℹ 4 more variables: avg_liveness &lt;dbl&gt;, avg_danceability &lt;dbl&gt;,\n#   avg_energy &lt;dbl&gt;, avg_valence &lt;dbl&gt;\n\n\n\n\n\n2.4 Analysis\n\nPlot the graph of average\n\n\n\n\n\n\n\n\n\nFrom the graph above, we can see that the style change a little bit from 1996 to 1997. More detailed:\nThere are features that not show a great variance between three album:\n\nThe average speechiness of the tracks in three albums maintain the same from 1996 to 2000, at about 0.05, which is a very low value of the speechiness. This means that the all the tracks are non-speech-like tracks.\nThe average liveness increased a little bit in 1997, but decrease back to origin in 2000, and the value is all below 0.2. This means there is little presence of an audience in the recording, most of the audios are not live\nThe average danceability decreased a lot in 1997, but increase back to origin in 2000, and the values are almost higher than 0.6. This means most of their songs are danceable, but in 1997 it is not so danceable.\nThe average energy increased a little in 1997, but decrease back to origin in 2000, and the values are all higher than 0.7. This means most of their songs can let people feel fast, loud, and noisy.\n\nThere are 3 features that show a strictly increase or decrease trend in three album:\n\nThe average instrumentalness decrease from 0.15 to 0.02 in 1997 or even becomes near 0 in 2000. This means that the the use of instruments was reduced in 1997, and even in the subsequent tracks, instruments were hardly heard.\nThe average valence also decrease a lot, from 0.75 to 0.59. This means that the music sounds less positive in the newer tracks, but still spread a positive mood.\nThe average acousticness increase from 0.1 to 0.15, the increase is not so obvious. This means that the tracks is more acoustic.\n\nIn summary, all the tracks are non-speechiness and non-liveness. The artist try to change the style a little bit in 1997. In 1997, the songs are more energetic, more acoustic, and less positive.\n\n\n\n2.5 Boringness Test\nIn this test, I create an equation of calculating boringness:\n\\(boringness = loudness + tempo + (energy\\times100) + (danceability\\times100)\\)\nIf boringness value is low, then it is boring. Vice versa.\nThe boringness of each track in the album is shown by the following graph:\n\n\n\n\n\n\n\n\n\nFrom this chart, we can see that the album with the highest average quality is the album Spice, which was the least boring when they first debuted. The album with the lowest average quality is the second album Spice World. The average value of the third album Forever has rebounded and even reached the highest value. This also confirms my analysis in the first part, which is consistent with the trend of their trying to make changes in some aspects, but finding that the effect is not good, and then returning to the original style.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#analysis",
    "href": "report.html#analysis",
    "title": "Report",
    "section": "Analysis",
    "text": "Analysis\n\n2.4 Plot the graph of average\n\n\n\n\n\n\n\n\n\nFrom the graph above, we can see that the style change a little bit from 1996 to 1997. More detailed:\nThere are features that not show a great variance between three album:\n\nThe average speechiness of the tracks in three albums maintain the same from 1996 to 2000, at about 0.05, which is a very low value of the speechiness. This means that the all the tracks are non-speech-like tracks.\nThe average liveness increased a little bit in 1997, but decrease back to origin in 2000, and the value is all below 0.2. This means there is little presence of an audience in the recording, most of the audios are not live\nThe average danceability decreased a lot in 1997, but increase back to origin in 2000, and the values are almost higher than 0.6. This means most of their songs are danceable, but in 1997 it is not so danceable.\nThe average energy increased a little in 1997, but decrease back to origin in 2000, and the values are all higher than 0.7. This means most of their songs can let people feel fast, loud, and noisy.\n\nThere are 3 features that show a strictly increase or decrease trend in three album:\n\nThe average instrumentalness decrease from 0.15 to 0.02 in 1997 or even becomes near 0 in 2000. This means that the the use of instruments was reduced in 1997, and even in the subsequent tracks, instruments were hardly heard.\nThe average valence also decrease a lot, from 0.75 to 0.59. This means that the music sounds less positive in the newer tracks, but still spread a positive mood.\nThe average acousticness increase from 0.1 to 0.15, the increase is not so obvious. This means that the tracks is more acoustic.\n\nIn summary, all the tracks are non-speechiness and non-liveness. The artist try to change the style a little bit in 1997. In 1997, the songs are more energetic, more acoustic, and less positive.\n\n\n2.5 Boringness Test\nIn this test, I create an equation of calculating boringness:\n\\(boringness = loudness + tempo + (energy\\times100) + (danceability\\times100)\\)\nIf boringness value is low, then it is boring. Vice versa.\nThe boringness of each track in the album is shown by the following graph:\n\n\n\n\n\n\n\n\n\nFrom this chart, we can see that the album with the highest average quality is the album Spice, which was the least boring when they first debuted. The album with the lowest average quality is the second album Spice World. The average value of the third album Forever has rebounded and even reached the highest value. This also confirms my analysis in the first part, which is consistent with the trend of their trying to make changes in some aspects, but finding that the effect is not good, and then returning to the original style.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#lyrical-analysis",
    "href": "report.html#lyrical-analysis",
    "title": "Report",
    "section": "3 Lyrical Analysis",
    "text": "3 Lyrical Analysis\n\n3.1 Most Popular Member\n\n\n\n\n\n\nWhat can the Spice Girls’ lyrics tell audiences about them and their music? Above is a bar graph counting the amount of total lines for each Spice Girl in their entire discography. These numbers may reveal interesting information about which members were more popular, or whether the member’s popularity correlated to their music. Maybe their personalities and public persona were more important to popularity than the amount of lines they had? Lyrically, the most popular member was Sporty Spice (Melanie C), followed by Baby Spice (Emma Bunton), then Scary (Mel B), Ginger (Geri Halliwell-Horner), and finally Posh (Victoria Beckham).\nPerhaps different albums promoted different members? Released in 1996, Scary Spice was actually featured the most in their first album, Spice. Coming in second and third were Ginger and Baby Spice. The release of the second album Spiceworld, however, placed Sporty Spice in a more prominent role musically. She rose from having the fourth most lines to being the clear favorite, as the graph below shows. Scary Spice fell to third, with Baby Spice rising to second and Ginger falling further behind. Why did Sporty Spice receive so many more during the second album? There may not be one clear answer. Audience preferences, musical ability, and more are all factors that could explain the change. One thing however, is certain: Sporty Spice, on paper, became the most popular member of the Spice Girls.\n\n\n3.2 Most Popular Member by Album\n\n\n\n\n\n\nBut what about the third album? Geri Halliwell-Horner left the group in 1998 to the shock of fans citing creative differences, exhaustion, as well as rumored arguments with Mel B. In response, The four remaining members remained and adapted their musical style and image for their next album Forever.\nDespite a new R/B sound, Sporty Spice remained as the member with the most lines. Interestingly, the album has the least amount of lines out of their entire discography, which attests to their new musical approach after the loss of Halliwell-Horner.\n\n\n3.3 Lyrical Themes\n\nTop Words\n\n\n\n\n\n\nMoving to the lyrics themselves, the graph above shows the top words in all of the Spice Girls’ lyrics, with filler words removed. “Love” takes the top spot, highlighting the prominence of relationship themes, both romantic and platonic, in their music. “Time” is next. This could refer to time in romantic and platonic relationships. I.e. “not wanting to waste time.” Additionally, “dance” “shake,” and “move” all suggest that partying or celebrating are important topics in the Spice Girls’ music. This all aligns with the fun, independent, confident image the Spice Girls’ advertised during the 90s and beyond.\nThis is further supported by a sentiment analysis of the lyrics. The results show that the Spice Girls’ songs contain more positive sentiment than negative.\n\n\n\n3.4 Sentiment Analysis\n\n\n\n\n\n\nTo further expand our lyrical analysis, we can use a tf_idf generative model (more information in the appendix) to generate 3 major themes. As shown below, the model groups key words into different “topics,” or themes. we can then analyze specific songs and albums to determine which themes are most prominent. This information can be helpful in determining which themes may have resonated with listeners when taking into account the popularity of the respective songs and albums.\nTheme one’s top words include “time” and “deeper,” therefore, we will call it the “time theme.” Key words for theme two include “love”, “holler”, and “generation” while theme three is largely defined by “dance”. Thus, they will be called the “love theme” and “dance theme”, respectively.The themes are clearly subjective, with pretty significant overlap. This could mean that the Spice Girls explored only a couple of significant themes, like relationships and love, throughout their discography, opting to instead evolve in other ways.\n\n\n3.5 Three Main Themes\n\n\n\n\n\n\n\n\n\n\n\n3.6 Theme Distribution Across Album\n\n\n\n\n\n\nTo further explore how the Spice Girls changed lyrically, the graph above shows the topic distribution across albums. Interestingly, each album as a distinct topic, indicating that the group may have decided to focus on a unique theme for each album. For Spice, the time theme is first. The Dance theme leads in Spiceworld, while for Forever the love theme is highest.\nAdditionally, the time theme lessens for each album. This shows that the Spice Girls may have been purposefully aiming to explore new avenues in their lyrics.\nOverall, the topic distribution across their albums gives interesting insight into the changing lyrical style of the Spice Girls.\nThese various lyrical analyses have shed light on an often overlooked aspect of the Spice Girls: their lyrics. While a topic distribution analysis may have shown that their quite significant overlap at times in their lyrical themes, the album distribution indicates an attempt to evolve musically. Additionally the analysis of line distribution among the members revealed a possible favorite, or center: Sporty Spice.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#lyrical-themes",
    "href": "report.html#lyrical-themes",
    "title": "Report",
    "section": "Lyrical Themes",
    "text": "Lyrical Themes\n\n3.3 Top Words\n\n\n\n\n\n\nMoving to the lyrics themselves, the graph above shows the top words in all of the Spice Girls’ lyrics, with filler words removed. “Love” takes the top spot, highlighting the prominence of relationship themes, both romantic and platonic, in their music. “Time” is next. This could refer to time in romantic and platonic relationships. I.e. “not wanting to waste time.” Additionally, “dance” “shake,” and “move” all suggest that partying or celebrating are important topics in the Spice Girls’ music. This all aligns with the fun, independent, confident image the Spice Girls’ advertised during the 90s and beyond.\nThis is further supported by a sentiment analysis of the lyrics. The results show that the Spice Girls’ songs contain more positive sentiment than negative.\n\n\n3.4 Sentiment Analysis\n\n\n\n\n\n\nTo further expand our lyrical analysis, we can use a tf_idf generative model (more information in the appendix) to generate 3 major themes. As shown below, the model groups key words into different “topics,” or themes. we can then analyze specific songs and albums to determine which themes are most prominent. This information can be helpful in determining which themes may have resonated with listeners when taking into account the popularity of the respective songs and albums.\nTheme one’s top words include “time” and “deeper,” therefore, we will call it the “time theme.” Key words for theme two include “love”, “holler”, and “generation” while theme three is largely defined by “dance”. Thus, they will be called the “love theme” and “dance theme”, respectively.The themes are clearly subjective, with pretty significant overlap. This could mean that the Spice Girls explored only a couple of significant themes, like relationships and love, throughout their discography, opting to instead evolve in other ways.\n\n\n3.5 Three Main Themes\n\n\n\n\n\n\n\n\n\n\n\n3.6 Theme Distribution Across Album\n\n\n\n\n\n\nTo further explore how the Spice Girls changed lyrically, the graph above shows the topic distribution across albums. Interestingly, each album as a distinct topic, indicating that the group may have decided to focus on a unique theme for each album. For Spice, the time theme is first. The Dance theme leads in Spiceworld, while for Forever the love theme is highest.\nAdditionally, the time theme lessens for each album. This shows that the Spice Girls may have been purposefully aiming to explore new avenues in their lyrics.\nOverall, the topic distribution across their albums gives interesting insight into the changing lyrical style of the Spice Girls.\nThese various lyrical analyses have shed light on an often overlooked aspect of the Spice Girls: their lyrics. While a topic distribution analysis may have shown that their quite significant overlap at times in their lyrical themes, the album distribution indicates an attempt to evolve musically. Additionally the analysis of line distribution among the members revealed a possible favorite, or center: Sporty Spice.",
    "crumbs": [
      "Report"
    ]
  },
  {
    "objectID": "report.html#music-typology-analysis",
    "href": "report.html#music-typology-analysis",
    "title": "Report",
    "section": "4 Music Typology Analysis",
    "text": "4 Music Typology Analysis\n\n\n# A tibble: 31 × 25\n# Groups:   album_release_year [3]\n   artist_name artist_id          album_id album_release_date album_release_year\n   &lt;chr&gt;       &lt;chr&gt;              &lt;chr&gt;    &lt;date&gt;                          &lt;dbl&gt;\n 1 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 2 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 3 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 4 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 5 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 6 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 7 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 8 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n 9 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n10 Spice Girls 0uq5PttqEjj3IH1bz… 4jbWZmf… 2000-01-01                       2000\n# ℹ 21 more rows\n# ℹ 20 more variables: danceability &lt;dbl&gt;, energy &lt;dbl&gt;, key &lt;dbl&gt;,\n#   loudness &lt;dbl&gt;, mode &lt;dbl&gt;, speechiness &lt;dbl&gt;, acousticness &lt;dbl&gt;,\n#   instrumentalness &lt;dbl&gt;, liveness &lt;dbl&gt;, valence &lt;dbl&gt;, tempo &lt;dbl&gt;,\n#   track_id &lt;chr&gt;, time_signature &lt;dbl&gt;, duration_ms &lt;dbl&gt;, track_name &lt;chr&gt;,\n#   track_number &lt;dbl&gt;, album_name &lt;chr&gt;, key_name &lt;chr&gt;, mode_name &lt;chr&gt;,\n#   key_mode &lt;chr&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis bar graph shows the different album release years and it shows the average tempo of each song. Focusing on the kind of music the Spice Girls make I decided to use tempo as a variable for measurement because most of their music is high tempo and high energy. This is a common factor between many pop songs as many songs in this genre tend to be high energy with a higher tempo compared to other types of music. We can see in the graph that the average tempo of the albums are all fairly high. The average tempo of pop songs is usually around 100-130 and on the bar graph that is shown the average tempo of all the albums is in between 100 and 130, right in the middle of the average tempo for pop songs.",
    "crumbs": [
      "Report"
    ]
  }
]